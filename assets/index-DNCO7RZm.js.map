{"version":3,"file":"index-DNCO7RZm.js","sources":["../../src/config.js","../../src/services/case-listener.js","../../src/ui/dashboard.js","../../src/ui/case-detail.js","../../src/main.js"],"sourcesContent":["/**\n * Kiosk Configuration\n */\n\n// Check if running in development\nconst isDevelopment = import.meta.env.DEV;\n\nexport const KIOSK_CONFIG = {\n  // API Configuration\n  caseSharingUrl: isDevelopment\n    ? 'http://localhost:8080' // Local Cloud Function emulator\n    : 'https://case-sharing-564499947017.europe-west3.run.app',\n\n  // Polling interval (milliseconds)\n  pollInterval: 5000, // 5 seconds\n\n  // Auto-archive time (matches server)\n  autoArchiveHours: 2,\n\n  // GPS stale warning threshold\n  staleGpsMinutes: 5,\n\n  // Hospital ID (configure per kiosk installation)\n  // Leave as null to show all cases, or set to specific hospital ID\n  hospitalId: 'BY-NS-001', // LMU Klinikum München - Großhadern\n\n  // Hospital name for display\n  hospitalName: 'LMU Klinikum München - Notaufnahme',\n\n  // Google Maps API Key (for live tracking map)\n  googleMapsApiKey: 'AIzaSyACBndIj8HD1wwZ4Vw8PDDI0bIe6DoBExI',\n\n  // Alert settings\n  playAudioAlert: true,\n  audioAlertVolume: 0.5, // 0.0 to 1.0\n\n  // Display settings\n  showArchivedCases: false, // Hide archived cases\n  maxCasesDisplay: 20, // Maximum cases to show\n\n  // Theme\n  theme: 'dark', // 'dark' or 'light'\n};\n\nexport const URGENCY_CONFIG = {\n  IMMEDIATE: {\n    color: '#ff4444',\n    icon: '🚨',\n    priority: 0,\n  },\n  TIME_CRITICAL: {\n    color: '#ff8800',\n    icon: '⏰',\n    priority: 1,\n  },\n  URGENT: {\n    color: '#ffcc00',\n    icon: '⚠️',\n    priority: 2,\n  },\n  STANDARD: {\n    color: '#4a90e2',\n    icon: '🏥',\n    priority: 3,\n  },\n};\n","/**\n * Case Listener Service\n * Polls Cloud Function for active cases\n */\nimport { KIOSK_CONFIG } from '../config.js';\n\nexport class CaseListener {\n  constructor() {\n    this.baseUrl = KIOSK_CONFIG.caseSharingUrl;\n    this.pollInterval = KIOSK_CONFIG.pollInterval;\n    this.hospitalId = KIOSK_CONFIG.hospitalId;\n    this.intervalId = null;\n    this.cases = new Map();\n    this.onUpdate = null;\n    this.onError = null;\n    this.lastFetchTime = null;\n    this.isConnected = false;\n  }\n\n  /**\n   * Start listening for cases\n   * @param {Function} onUpdateCallback - Called when cases update\n   * @param {Function} onErrorCallback - Called on errors\n   */\n  start(onUpdateCallback, onErrorCallback) {\n    this.onUpdate = onUpdateCallback;\n    this.onError = onErrorCallback;\n\n    // Initial fetch\n    this.fetchCases();\n\n    // Start polling\n    this.intervalId = setInterval(() => {\n      this.fetchCases();\n    }, this.pollInterval);\n\n    console.log('[CaseListener] Started polling every', this.pollInterval, 'ms');\n  }\n\n  /**\n   * Stop listening\n   */\n  stop() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n      console.log('[CaseListener] Stopped polling');\n    }\n  }\n\n  /**\n   * Fetch cases from API\n   */\n  async fetchCases() {\n    try {\n      const url = this.buildFetchUrl();\n\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n        },\n        signal: AbortSignal.timeout(8000), // 8 second timeout\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n\n      if (!data.success) {\n        throw new Error(data.error || 'Failed to fetch cases');\n      }\n\n      // Update connection status\n      this.isConnected = true;\n      this.lastFetchTime = new Date();\n\n      // Process cases\n      this.processCases(data.cases || []);\n\n      // Notify listeners\n      if (this.onUpdate) {\n        this.onUpdate({\n          cases: Array.from(this.cases.values()),\n          timestamp: data.timestamp,\n          count: data.count,\n        });\n      }\n    } catch (error) {\n      console.error('[CaseListener] Fetch error:', error);\n      this.isConnected = false;\n\n      if (this.onError) {\n        this.onError(error);\n      }\n    }\n  }\n\n  /**\n   * Build fetch URL with filters\n   */\n  buildFetchUrl() {\n    let url = `${this.baseUrl}/get-cases`;\n\n    const params = new URLSearchParams();\n\n    if (this.hospitalId) {\n      params.append('hospitalId', this.hospitalId);\n    }\n\n    params.append('status', 'in_transit');\n\n    const queryString = params.toString();\n    if (queryString) {\n      url += `?${queryString}`;\n    }\n\n    return url;\n  }\n\n  /**\n   * Process fetched cases\n   */\n  processCases(newCases) {\n    const oldCaseIds = new Set(this.cases.keys());\n    const newCaseIds = new Set();\n\n    // Process each case\n    newCases.forEach((caseData) => {\n      const caseId = caseData.id;\n      newCaseIds.add(caseId);\n\n      const isNew = !this.cases.has(caseId);\n\n      // Store case\n      this.cases.set(caseId, {\n        ...caseData,\n        isNew, // Flag for new case alert\n        receivedAt: isNew ? new Date() : this.cases.get(caseId).receivedAt,\n      });\n\n      // Log new cases\n      if (isNew) {\n        console.log('[CaseListener] New case:', caseId, this.getCaseSummary(caseData));\n      }\n    });\n\n    // Remove cases that are no longer active\n    oldCaseIds.forEach((caseId) => {\n      if (!newCaseIds.has(caseId)) {\n        console.log('[CaseListener] Case removed:', caseId);\n        this.cases.delete(caseId);\n      }\n    });\n  }\n\n  /**\n   * Get case summary for logging\n   */\n  getCaseSummary(caseData) {\n    const ichPercent = Math.round((caseData.results?.ich?.probability || 0) * 100);\n    const eta = caseData.tracking?.duration || '?';\n\n    return {\n      module: caseData.moduleType,\n      ich: `${ichPercent}%`,\n      eta: `${eta} min`,\n      urgency: caseData.urgency,\n    };\n  }\n\n  /**\n   * Get all cases\n   */\n  getCases() {\n    return Array.from(this.cases.values());\n  }\n\n  /**\n   * Get case by ID\n   */\n  getCase(caseId) {\n    return this.cases.get(caseId);\n  }\n\n  /**\n   * Mark case as viewed (clear isNew flag)\n   */\n  markViewed(caseId) {\n    const caseData = this.cases.get(caseId);\n    if (caseData) {\n      caseData.isNew = false;\n      this.cases.set(caseId, caseData);\n    }\n  }\n\n  /**\n   * Get connection status\n   */\n  getStatus() {\n    return {\n      isConnected: this.isConnected,\n      lastFetchTime: this.lastFetchTime,\n      caseCount: this.cases.size,\n      isPolling: this.intervalId !== null,\n    };\n  }\n}\n\n// Export singleton\nexport const caseListener = new CaseListener();\n","/**\n * Dashboard UI - Case List View\n */\nimport { URGENCY_CONFIG } from '../config.js';\n\nexport function renderDashboard(cases) {\n  const container = document.getElementById('casesContainer');\n  if (!container) {\n    return;\n  }\n\n  if (!cases || cases.length === 0) {\n    container.innerHTML = `\n      <div class=\"no-cases-state\">\n        <div class=\"no-cases-icon\">✓</div>\n        <h2>Keine aktiven Fälle / No Active Cases</h2>\n        <p>Das System ist aktiv und überwacht eingehende Fälle</p>\n        <p>System is active and monitoring incoming cases</p>\n      </div>\n    `;\n    return;\n  }\n\n  // Sort by urgency and ETA\n  const sortedCases = sortCases(cases);\n\n  // Render case cards\n  const cardsHTML = sortedCases.map((caseData) => renderCaseCard(caseData)).join('');\n\n  container.innerHTML = `\n    <div class=\"cases-grid\">\n      ${cardsHTML}\n    </div>\n  `;\n}\n\n/**\n * Sort cases by urgency and ETA\n */\nfunction sortCases(cases) {\n  return [...cases].sort((a, b) => {\n    const urgencyA = URGENCY_CONFIG[a.urgency]?.priority ?? 10;\n    const urgencyB = URGENCY_CONFIG[b.urgency]?.priority ?? 10;\n\n    if (urgencyA !== urgencyB) {\n      return urgencyA - urgencyB;\n    }\n\n    // Same urgency - sort by ETA\n    const etaA = a.tracking?.duration || 9999;\n    const etaB = b.tracking?.duration || 9999;\n    return etaA - etaB;\n  });\n}\n\n/**\n * Render individual case card\n */\nfunction renderCaseCard(caseData) {\n  const urgencyConfig = URGENCY_CONFIG[caseData.urgency] || URGENCY_CONFIG.STANDARD;\n  const ichPercent = Math.round((caseData.results?.ich?.probability || 0) * 100);\n  const lvoPercent = caseData.results?.lvo ? Math.round(caseData.results.lvo.probability * 100) : null;\n  const eta = caseData.tracking?.duration || '?';\n  const distance = caseData.tracking?.distance || '?';\n\n  // Check GPS staleness\n  const isGpsStale = caseData.tracking?.gpsStale || false;\n\n  // Calculate time since received\n  const receivedAgo = getTimeAgo(caseData.createdAt);\n\n  return `\n    <div class=\"case-card ${caseData.urgency.toLowerCase()} ${caseData.isNew ? 'new-case' : ''}\"\n         data-case-id=\"${caseData.id}\"\n         style=\"border-color: ${urgencyConfig.color}\">\n\n      <div class=\"case-header\">\n        <div class=\"urgency-badge\" style=\"background: ${urgencyConfig.color}\">\n          ${urgencyConfig.icon} ${caseData.urgency}\n        </div>\n        <div class=\"case-meta\">\n          <span class=\"ambulance-id\">${caseData.ambulanceId}</span>\n          <span class=\"module-type\">${caseData.moduleType}</span>\n        </div>\n      </div>\n\n      <div class=\"case-risks\">\n        <div class=\"risk-circle-container\">\n          <div class=\"risk-circle ${ichPercent > 70 ? 'critical' : ichPercent > 50 ? 'high' : 'medium'}\"\n               style=\"background: conic-gradient(${getRiskColor(ichPercent)} ${ichPercent}%, rgba(255,255,255,0.1) 0%)\">\n            <div class=\"risk-value\">${ichPercent}%</div>\n          </div>\n          <div class=\"risk-label\">ICH</div>\n        </div>\n\n        ${lvoPercent !== null ? `\n          <div class=\"risk-circle-container\">\n            <div class=\"risk-circle ${lvoPercent > 50 ? 'high' : 'medium'}\"\n                 style=\"background: conic-gradient(${getRiskColor(lvoPercent)} ${lvoPercent}%, rgba(255,255,255,0.1) 0%)\">\n              <div class=\"risk-value\">${lvoPercent}%</div>\n            </div>\n            <div class=\"risk-label\">LVO</div>\n          </div>\n        ` : ''}\n      </div>\n\n      <div class=\"case-eta\">\n        <div class=\"eta-main ${isGpsStale ? 'stale' : ''}\">\n          <span class=\"eta-value\">${eta}</span>\n          <span class=\"eta-unit\">min</span>\n        </div>\n        <div class=\"eta-details\">\n          <span class=\"distance\">${typeof distance === 'number' ? distance.toFixed(1) : distance} km</span>\n          ${isGpsStale ? '<span class=\"gps-stale-warning\">⚠️ GPS stale</span>' : ''}\n        </div>\n      </div>\n\n      <div class=\"case-footer\">\n        <span class=\"case-time\">${receivedAgo}</span>\n        <span class=\"view-details\">View Details →</span>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Get risk color based on percentage\n */\nfunction getRiskColor(percent) {\n  if (percent > 70) {\n    return '#ff4444';\n  }\n  if (percent > 50) {\n    return '#ff8800';\n  }\n  if (percent > 30) {\n    return '#ffcc00';\n  }\n  return '#4a90e2';\n}\n\n/**\n * Get time ago string\n */\nfunction getTimeAgo(timestamp) {\n  const now = new Date();\n  const then = new Date(timestamp);\n  const seconds = Math.floor((now - then) / 1000);\n\n  if (seconds < 60) {\n    return `${seconds}s ago`;\n  }\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) {\n    return `${minutes}m ago`;\n  }\n  const hours = Math.floor(minutes / 60);\n  return `${hours}h ${minutes % 60}m ago`;\n}\n","/**\n * Case Detail Modal\n * Shows full assessment results for a case\n */\n\nexport function showCaseDetail(caseData) {\n  const modal = document.getElementById('caseDetailModal');\n  if (!modal) {\n    return;\n  }\n\n  const modalContent = modal.querySelector('.modal-content');\n  if (!modalContent) {\n    return;\n  }\n\n  // Render detail view\n  modalContent.innerHTML = renderDetailView(caseData);\n\n  // Show modal\n  modal.style.display = 'flex';\n}\n\nfunction renderDetailView(caseData) {\n  const { results, formData, moduleType, ambulanceId, tracking, urgency } = caseData;\n  const ichPercent = Math.round((results?.ich?.probability || 0) * 100);\n  const lvoPercent = results?.lvo ? Math.round(results.lvo.probability * 100) : null;\n\n  return `\n    <div class=\"case-detail-container\">\n      <div class=\"detail-header\">\n        <div class=\"header-left\">\n          <h2>Case Details</h2>\n          <div class=\"case-badges\">\n            <span class=\"badge urgency-badge\">${urgency}</span>\n            <span class=\"badge module-badge\">${moduleType}</span>\n            <span class=\"badge ambulance-badge\">${ambulanceId}</span>\n          </div>\n        </div>\n        <button class=\"close-modal\">✕ Close</button>\n      </div>\n\n      <div class=\"detail-content\">\n        <div class=\"content-section\">\n          <h3>🎯 Risk Assessment</h3>\n          <div class=\"risk-display-large\">\n            <div class=\"risk-item-large\">\n              <div class=\"risk-label-large\">ICH Risk</div>\n              <div class=\"risk-value-large\" style=\"color: ${getRiskColor(ichPercent)}\">${ichPercent}%</div>\n              <div class=\"risk-level-large\">${getRiskLevel(ichPercent)}</div>\n            </div>\n\n            ${lvoPercent !== null ? `\n              <div class=\"risk-item-large\">\n                <div class=\"risk-label-large\">LVO Risk</div>\n                <div class=\"risk-value-large\" style=\"color: ${getRiskColor(lvoPercent)}\">${lvoPercent}%</div>\n                <div class=\"risk-level-large\">${getRiskLevel(lvoPercent)}</div>\n              </div>\n            ` : ''}\n          </div>\n        </div>\n\n        <div class=\"content-section\">\n          <h3>📍 Tracking Information</h3>\n          <div class=\"tracking-grid\">\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">ETA</div>\n              <div class=\"tracking-value\">${tracking?.duration || '?'} min</div>\n            </div>\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">Distance</div>\n              <div class=\"tracking-value\">${tracking?.distance ? tracking.distance.toFixed(1) : '?'} km</div>\n            </div>\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">Last Update</div>\n              <div class=\"tracking-value\">${tracking?.lastUpdated ? formatTime(tracking.lastUpdated) : 'Unknown'}</div>\n            </div>\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">Estimated Arrival</div>\n              <div class=\"tracking-value\">${tracking?.estimatedArrival ? formatTime(tracking.estimatedArrival) : 'Unknown'}</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"content-section\">\n          <h3>📋 Assessment Data</h3>\n          <div class=\"data-table\">\n            ${renderFormData(formData)}\n          </div>\n        </div>\n\n        ${results?.ich?.drivers ? `\n          <div class=\"content-section\">\n            <h3>⚡ Risk Factors</h3>\n            ${renderDrivers(results.ich.drivers)}\n          </div>\n        ` : ''}\n      </div>\n\n      <div class=\"detail-footer\">\n        <button class=\"close-modal secondary-button\">Close</button>\n      </div>\n    </div>\n  `;\n}\n\nfunction getRiskColor(percent) {\n  if (percent > 70) {\n    return '#ff4444';\n  }\n  if (percent > 50) {\n    return '#ff8800';\n  }\n  if (percent > 30) {\n    return '#ffcc00';\n  }\n  return '#4a90e2';\n}\n\nfunction getRiskLevel(percent) {\n  if (percent > 70) {\n    return 'Very High Risk';\n  }\n  if (percent > 50) {\n    return 'High Risk';\n  }\n  if (percent > 30) {\n    return 'Moderate Risk';\n  }\n  return 'Low Risk';\n}\n\nfunction formatTime(isoString) {\n  try {\n    const date = new Date(isoString);\n    return date.toLocaleTimeString('de-DE', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  } catch {\n    return 'Invalid time';\n  }\n}\n\nfunction renderFormData(formData) {\n  if (!formData || Object.keys(formData).length === 0) {\n    return '<p>No assessment data available</p>';\n  }\n\n  return Object.entries(formData)\n    .filter(([key, value]) => value !== null && value !== undefined && value !== '')\n    .map(\n      ([key, value]) => `\n      <div class=\"data-row\">\n        <div class=\"data-label\">${formatLabel(key)}</div>\n        <div class=\"data-value\">${value}</div>\n      </div>\n    `,\n    )\n    .join('');\n}\n\nfunction formatLabel(key) {\n  return key\n    .replace(/_/g, ' ')\n    .replace(/\\b\\w/g, (l) => l.toUpperCase());\n}\n\nfunction renderDrivers(drivers) {\n  if (!drivers || (!drivers.positive && !drivers.negative)) {\n    return '<p>No driver data available</p>';\n  }\n\n  const positive = drivers.positive || [];\n  const negative = drivers.negative || [];\n\n  return `\n    <div class=\"drivers-container\">\n      <div class=\"drivers-column\">\n        <h4>⬆ Increasing Risk</h4>\n        ${positive.length > 0\n      ? positive\n        .map(\n          (d) => `\n              <div class=\"driver-item positive\">\n                <span class=\"driver-label\">${formatLabel(d.label)}</span>\n                <span class=\"driver-value\">${(Math.abs(d.weight) * 100).toFixed(1)}%</span>\n              </div>\n            `,\n        )\n        .join('')\n      : '<p class=\"no-drivers\">None</p>'\n    }\n      </div>\n\n      <div class=\"drivers-column\">\n        <h4>⬇ Decreasing Risk</h4>\n        ${negative.length > 0\n      ? negative\n        .map(\n          (d) => `\n              <div class=\"driver-item negative\">\n                <span class=\"driver-label\">${formatLabel(d.label)}</span>\n                <span class=\"driver-value\">${(Math.abs(d.weight) * 100).toFixed(1)}%</span>\n              </div>\n            `,\n        )\n        .join('')\n      : '<p class=\"no-drivers\">None</p>'\n    }\n      </div>\n    </div>\n  `;\n}\n","/**\n * Kiosk Main Application\n * Entry point for Notaufnahme kiosk display\n */\nimport { KIOSK_CONFIG } from './config.js';\nimport { caseListener } from './services/case-listener.js';\nimport { renderDashboard } from './ui/dashboard.js';\nimport { showCaseDetail } from './ui/case-detail.js';\n\n// Application state\nlet currentCases = [];\nlet audioContext = null;\n\n/**\n * Initialize kiosk application\n */\nasync function initializeKiosk() {\n  console.log('[Kiosk] Initializing...', KIOSK_CONFIG);\n\n  // Update hospital name\n  document.getElementById('hospitalName').textContent = KIOSK_CONFIG.hospitalName;\n\n  // Start clock\n  updateClock();\n  setInterval(updateClock, 1000);\n\n  // Initialize audio if enabled\n  if (KIOSK_CONFIG.playAudioAlert) {\n    initializeAudio();\n  }\n\n  // Start case listener\n  caseListener.start(\n    (data) => handleCaseUpdate(data),\n    (error) => handleError(error),\n  );\n\n  // Add event listeners\n  attachEventListeners();\n\n  console.log('[Kiosk] Initialized successfully');\n}\n\n/**\n * Handle case updates\n */\nfunction handleCaseUpdate(data) {\n  const previousCount = currentCases.length;\n  currentCases = data.cases || [];\n\n  console.log('[Kiosk] Cases updated:', {\n    count: currentCases.length,\n    previous: previousCount,\n  });\n\n  // Update UI\n  renderDashboard(currentCases);\n  updateHeader(data);\n\n  // Check for new cases\n  const newCases = currentCases.filter((c) => c.isNew);\n  if (newCases.length > 0 && previousCount > 0) {\n    // Show alert for new cases\n    playNewCaseAlert();\n    flashScreen();\n\n    // Mark as viewed after showing alert\n    setTimeout(() => {\n      newCases.forEach((c) => caseListener.markViewed(c.id));\n    }, 2000);\n  }\n\n  // Update connection status\n  updateConnectionStatus(true);\n}\n\n/**\n * Handle errors\n */\nfunction handleError(error) {\n  console.error('[Kiosk] Error:', error);\n  updateConnectionStatus(false);\n\n  // Show error in UI if no cases\n  if (currentCases.length === 0) {\n    const container = document.getElementById('casesContainer');\n    if (container) {\n      container.innerHTML = `\n        <div class=\"error-state\">\n          <div class=\"error-icon\">⚠️</div>\n          <h2>Verbindungsfehler / Connection Error</h2>\n          <p>${error.message || 'Unable to connect to case monitoring system'}</p>\n          <p class=\"error-hint\">Checking again in ${KIOSK_CONFIG.pollInterval / 1000} seconds...</p>\n        </div>\n      `;\n    }\n  }\n}\n\n/**\n * Update header information\n */\nfunction updateHeader(data) {\n  // Update case count\n  const countBadge = document.getElementById('caseCount');\n  if (countBadge) {\n    const count = data.count || 0;\n    countBadge.textContent = `${count} ${count === 1 ? 'Case' : 'Cases'}`;\n    countBadge.className = `case-count-badge ${count > 0 ? 'has-cases' : ''}`;\n  }\n}\n\n/**\n * Update connection status indicator\n */\nfunction updateConnectionStatus(connected) {\n  const status = document.getElementById('connectionStatus');\n  if (status) {\n    status.className = `status-indicator ${connected ? 'connected' : 'disconnected'}`;\n    status.title = connected ? 'Connected' : 'Disconnected';\n  }\n}\n\n/**\n * Update clock\n */\nfunction updateClock() {\n  const clockElement = document.getElementById('currentTime');\n  if (clockElement) {\n    const now = new Date();\n    clockElement.textContent = now.toLocaleTimeString('de-DE', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    });\n  }\n}\n\n/**\n * Initialize audio context\n */\nfunction initializeAudio() {\n  // Create audio context on first user interaction\n  document.addEventListener(\n    'click',\n    () => {\n      if (!audioContext) {\n        audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        console.log('[Kiosk] Audio initialized');\n      }\n    },\n    { once: true },\n  );\n}\n\n/**\n * Play new case alert\n */\nfunction playNewCaseAlert() {\n  if (!KIOSK_CONFIG.playAudioAlert || !audioContext) {\n    return;\n  }\n\n  try {\n    // Generate alert beep\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n\n    oscillator.frequency.value = 880; // A5 note\n    oscillator.type = 'sine';\n\n    gainNode.gain.setValueAtTime(KIOSK_CONFIG.audioAlertVolume, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);\n\n    oscillator.start(audioContext.currentTime);\n    oscillator.stop(audioContext.currentTime + 0.5);\n\n    console.log('[Kiosk] Alert sound played');\n  } catch (error) {\n    console.warn('[Kiosk] Audio playback failed:', error);\n  }\n}\n\n/**\n * Flash screen for new case\n */\nfunction flashScreen() {\n  document.body.classList.add('flash-alert');\n\n  setTimeout(() => {\n    document.body.classList.remove('flash-alert');\n  }, 1000);\n}\n\n/**\n * Attach event listeners\n */\nfunction attachEventListeners() {\n  // Click on case card to show details\n  document.addEventListener('click', (e) => {\n    const caseCard = e.target.closest('.case-card');\n    if (caseCard) {\n      const caseId = caseCard.dataset.caseId;\n      if (caseId) {\n        const caseData = caseListener.getCase(caseId);\n        if (caseData) {\n          showCaseDetail(caseData);\n          caseListener.markViewed(caseId);\n        }\n      }\n    }\n\n    // Close modal\n    if (e.target.classList.contains('modal-overlay') || e.target.classList.contains('close-modal')) {\n      closeModal();\n    }\n  });\n\n  // ESC key to close modal\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'Escape') {\n      closeModal();\n    }\n  });\n\n  // Visibility change - resume polling if tab becomes visible\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      console.log('[Kiosk] Tab visible - fetching latest cases');\n      caseListener.fetchCases();\n    }\n  });\n}\n\n/**\n * Close case detail modal\n */\nfunction closeModal() {\n  const modal = document.getElementById('caseDetailModal');\n  if (modal) {\n    modal.style.display = 'none';\n    modal.querySelector('.modal-content').innerHTML = '';\n  }\n}\n\n/**\n * Handle application errors\n */\nwindow.addEventListener('error', (event) => {\n  console.error('[Kiosk] Unhandled error:', event.error);\n});\n\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('[Kiosk] Unhandled rejection:', event.reason);\n});\n\n/**\n * Start application when DOM ready\n */\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeKiosk);\n} else {\n  initializeKiosk();\n}\n\n/**\n * Export for debugging\n */\nwindow.kioskApp = {\n  getCases: () => currentCases,\n  getStatus: () => caseListener.getStatus(),\n  refresh: () => caseListener.fetchCases(),\n  playAlert: () => playNewCaseAlert(),\n};\n"],"names":["KIOSK_CONFIG","URGENCY_CONFIG","CaseListener","onUpdateCallback","onErrorCallback","url","response","data","error","params","queryString","newCases","oldCaseIds","newCaseIds","caseData","caseId","isNew","ichPercent","eta","caseListener","renderDashboard","cases","container","cardsHTML","sortCases","renderCaseCard","a","b","urgencyA","urgencyB","etaA","etaB","urgencyConfig","lvoPercent","distance","isGpsStale","receivedAgo","getTimeAgo","getRiskColor","percent","timestamp","now","then","seconds","minutes","showCaseDetail","modal","modalContent","renderDetailView","results","formData","moduleType","ambulanceId","tracking","urgency","getRiskLevel","formatTime","renderFormData","renderDrivers","isoString","key","value","formatLabel","l","drivers","positive","negative","d","currentCases","audioContext","initializeKiosk","updateClock","initializeAudio","handleCaseUpdate","handleError","attachEventListeners","previousCount","updateHeader","c","playNewCaseAlert","flashScreen","updateConnectionStatus","countBadge","count","connected","status","clockElement","oscillator","gainNode","caseCard","closeModal","event"],"mappings":"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"}