{"version":3,"mappings":"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","names":["KIOSK_CONFIG","stored","AVAILABLE_HOSPITALS","setHospital","hospitalId","hospital","h","URGENCY_CONFIG","CONSTANTS","getRiskColor","percent","getRiskLevel","formatTime","isoString","date","error","getTimeAgo","timestamp","now","then","seconds","minutes","formatLabel","key","l","formatETA","duration","eta","isGPSStale","lastUpdated","thresholdMinutes","lastUpdate","isCaseStale","createdAt","created","validateCaseData","caseData","createTimeoutSignal","timeoutMs","controller","timeoutId","sleep","ms","resolve","CaseListener","onUpdateCallback","onErrorCallback","lastError","attempt","url","response","data","delayMs","params","queryString","newCases","oldCaseIds","newCaseIds","caseId","isNew","gpsStale","enrichedTracking","ichPercent","caseListener","renderDashboard","cases","container","sortedCases","sortCases","cardsHTML","renderCaseCard","truncatedWarning","a","b","urgencyA","urgencyB","etaA","etaB","urgencyConfig","lvoPercent","formattedETA","distance","isGpsStale","caseIsStale","receivedAgo","ariaLabel","showCaseDetail","modal","modalContent","renderDetailView","results","formData","moduleType","ambulanceId","tracking","urgency","renderFormData","renderDrivers","value","drivers","positive","negative","d","currentCases","audioContext","clockIntervalId","isFirstLoad","initializeKiosk","initializeHospitalSelector","updateClock","initializeAudio","handleCaseUpdate","handleError","attachEventListeners","cleanup","err","previousCount","updateHeader","c","playNewCaseAlert","flashScreen","updateConnectionStatus","selector","__vitePreload","config","isSelected","e","countBadge","count","connected","status","clockElement","oscillator","gainNode","caseCard","closeModal","event"],"ignoreList":[],"sources":["../../src/config.js","../../src/utils.js","../../src/services/case-listener.js","../../src/ui/dashboard.js","../../src/ui/case-detail.js","../../src/main.js"],"sourcesContent":["/**\n * Kiosk Configuration\n */\n\n// Check if running in development\nconst isDevelopment = import.meta.env.DEV;\n\nexport const KIOSK_CONFIG = {\n  // API Configuration\n  caseSharingUrl: isDevelopment\n    ? 'http://localhost:8080' // Local Cloud Function emulator\n    : 'https://case-sharing-564499947017.europe-west3.run.app',\n\n  // Polling interval (milliseconds)\n  pollInterval: 5000, // 5 seconds\n\n  // Auto-archive time (matches server)\n  autoArchiveHours: 2,\n\n  // GPS stale warning threshold\n  staleGpsMinutes: 5,\n\n  // Hospital ID (can be changed via UI selector)\n  // Leave as null to show all cases, or set to specific hospital ID\n  hospitalId: (() => {\n    const stored = localStorage.getItem('kiosk_hospital_id');\n    // Explicitly check for null (not set) vs empty string (ALL selected)\n    if (stored === null) return 'BY-NS-001'; // Default on first load\n    if (stored === '') return null; // \"ALL\" hospitals\n    return stored; // Specific hospital\n  })(),\n\n  // Hospital name for display (updated dynamically)\n  hospitalName: localStorage.getItem('kiosk_hospital_name') || 'LMU Klinikum München - Großhadern',\n\n  // Google Maps API Key (for live tracking map)\n  googleMapsApiKey: 'AIzaSyACBndIj8HD1wwZ4Vw8PDDI0bIe6DoBExI',\n\n  // Alert settings\n  playAudioAlert: true,\n  audioAlertVolume: 0.5, // 0.0 to 1.0\n\n  // Display settings\n  showArchivedCases: false, // Hide archived cases\n  maxCasesDisplay: 20, // Maximum cases to show\n\n  // Theme\n  theme: 'dark', // 'dark' or 'light'\n};\n\n// Available hospitals for selector\nexport const AVAILABLE_HOSPITALS = [\n  { id: 'BY-NS-001', name: 'LMU Klinikum München - Großhadern' },\n  { id: 'BY-NS-002', name: 'Klinikum Rechts der Isar' },\n  { id: 'BY-NS-003', name: 'Helios Klinikum München West' },\n  { id: 'BY-NS-004', name: 'Klinikum Bogenhausen' },\n  { id: 'BW-NS-001', name: 'Universitätsklinikum Tübingen' },\n  { id: 'BW-NS-005', name: 'Klinikum Stuttgart - Katharinenhospital' },\n  { id: 'BW-NS-003', name: 'Universitätsklinikum Freiburg' },\n  { id: 'ALL', name: '🌐 All Hospitals (Show All Cases)' },\n];\n\n// Function to update hospital selection\nexport function setHospital(hospitalId) {\n  const hospital = AVAILABLE_HOSPITALS.find(h => h.id === hospitalId);\n  if (hospital) {\n    // Store the actual value or empty string for \"ALL\"\n    if (hospitalId === 'ALL') {\n      localStorage.setItem('kiosk_hospital_id', '');\n      localStorage.setItem('kiosk_hospital_name', hospital.name);\n    } else {\n      localStorage.setItem('kiosk_hospital_id', hospitalId);\n      localStorage.setItem('kiosk_hospital_name', hospital.name);\n    }\n    KIOSK_CONFIG.hospitalId = hospitalId === 'ALL' ? null : hospitalId;\n    KIOSK_CONFIG.hospitalName = hospital.name;\n    // Reload to apply changes\n    window.location.reload();\n  }\n}\n\nexport const URGENCY_CONFIG = {\n  IMMEDIATE: {\n    color: '#ff4444',\n    icon: '🚨',\n    priority: 0,\n  },\n  TIME_CRITICAL: {\n    color: '#ff8800',\n    icon: '⏰',\n    priority: 1,\n  },\n  URGENT: {\n    color: '#ffcc00',\n    icon: '⚠️',\n    priority: 2,\n  },\n  STANDARD: {\n    color: '#4a90e2',\n    icon: '🏥',\n    priority: 3,\n  },\n};\n","/**\n * Shared Utility Functions\n */\n\n// Constants for magic numbers\nexport const CONSTANTS = {\n  NEW_CASE_VIEWED_DELAY_MS: 2000,\n  ALERT_BEEP_DURATION_SEC: 0.5,\n  ALERT_BEEP_FREQUENCY_HZ: 880, // A5 note\n  ALERT_BEEP_VOLUME: 0.5,\n  FETCH_TIMEOUT_MS: 8000,\n  MAX_RETRY_ATTEMPTS: 3,\n  RETRY_DELAYS_MS: [2000, 4000, 8000], // Exponential backoff\n  CASE_STALE_THRESHOLD_MINUTES: 30,\n};\n\n/**\n * Get risk color based on percentage\n * @param {number} percent - Risk percentage (0-100)\n * @returns {string} Hex color code\n */\nexport function getRiskColor(percent) {\n  if (percent > 70) {\n    return '#ff4444';\n  }\n  if (percent > 50) {\n    return '#ff8800';\n  }\n  if (percent > 30) {\n    return '#ffcc00';\n  }\n  return '#4a90e2';\n}\n\n/**\n * Get risk level label based on percentage\n * @param {number} percent - Risk percentage (0-100)\n * @returns {string} Risk level description\n */\nexport function getRiskLevel(percent) {\n  if (percent > 70) {\n    return 'Very High Risk';\n  }\n  if (percent > 50) {\n    return 'High Risk';\n  }\n  if (percent > 30) {\n    return 'Moderate Risk';\n  }\n  return 'Low Risk';\n}\n\n/**\n * Format timestamp as time string\n * @param {string} isoString - ISO date string\n * @returns {string} Formatted time (HH:MM)\n */\nexport function formatTime(isoString) {\n  try {\n    const date = new Date(isoString);\n    if (isNaN(date.getTime())) {\n      throw new Error('Invalid date');\n    }\n    return date.toLocaleTimeString('de-DE', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  } catch (error) {\n    console.warn('[Utils] Invalid time:', isoString, error);\n    return 'Invalid time';\n  }\n}\n\n/**\n * Get time ago string with negative time protection\n * @param {string} timestamp - ISO date string\n * @returns {string} Time ago description\n */\nexport function getTimeAgo(timestamp) {\n  const now = new Date();\n  const then = new Date(timestamp);\n\n  // Protect against invalid dates or future dates\n  if (isNaN(then.getTime())) {\n    return 'Unknown';\n  }\n\n  const seconds = Math.max(0, Math.floor((now - then) / 1000));\n\n  if (seconds < 60) {\n    return `${seconds}s ago`;\n  }\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) {\n    return `${minutes}m ago`;\n  }\n  const hours = Math.floor(minutes / 60);\n  return `${hours}h ${minutes % 60}m ago`;\n}\n\n/**\n * Format label from snake_case to Title Case\n * @param {string} key - Key to format\n * @returns {string} Formatted label\n */\nexport function formatLabel(key) {\n  return key\n    .replace(/_/g, ' ')\n    .replace(/\\b\\w/g, (l) => l.toUpperCase());\n}\n\n/**\n * Format ETA with special cases\n * @param {number|string} duration - Duration in minutes\n * @returns {string} Formatted ETA\n */\nexport function formatETA(duration) {\n  if (duration === null || duration === undefined || duration === '?') {\n    return '?';\n  }\n\n  const eta = typeof duration === 'string' ? parseFloat(duration) : duration;\n\n  if (isNaN(eta)) {\n    return '?';\n  }\n\n  if (eta <= 0) {\n    return 'Arrived';\n  }\n\n  if (eta < 1) {\n    return '< 1';\n  }\n\n  return Math.round(eta).toString();\n}\n\n/**\n * Check if GPS data is stale\n * @param {string} lastUpdated - ISO date string of last GPS update\n * @param {number} thresholdMinutes - Staleness threshold in minutes\n * @returns {boolean} True if GPS is stale\n */\nexport function isGPSStale(lastUpdated, thresholdMinutes = 5) {\n  if (!lastUpdated) {\n    return true;\n  }\n\n  try {\n    const lastUpdate = new Date(lastUpdated);\n    if (isNaN(lastUpdate.getTime())) {\n      return true;\n    }\n\n    const now = new Date();\n    const minutesAgo = (now - lastUpdate) / (1000 * 60);\n    return minutesAgo > thresholdMinutes;\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Check if case is stale (old)\n * @param {string} createdAt - ISO date string when case was created\n * @param {number} thresholdMinutes - Staleness threshold in minutes\n * @returns {boolean} True if case is stale\n */\nexport function isCaseStale(createdAt, thresholdMinutes = CONSTANTS.CASE_STALE_THRESHOLD_MINUTES) {\n  if (!createdAt) {\n    return false;\n  }\n\n  try {\n    const created = new Date(createdAt);\n    if (isNaN(created.getTime())) {\n      return false;\n    }\n\n    const now = new Date();\n    const minutesAgo = (now - created) / (1000 * 60);\n    return minutesAgo > thresholdMinutes;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validate case data structure\n * @param {object} caseData - Case object to validate\n * @returns {boolean} True if valid\n */\nexport function validateCaseData(caseData) {\n  if (!caseData || typeof caseData !== 'object') {\n    return false;\n  }\n\n  // Required fields\n  if (!caseData.id || typeof caseData.id !== 'string') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Safe get nested property\n * @param {object} obj - Object to query\n * @param {string} path - Dot-separated path (e.g., 'results.ich.probability')\n * @param {*} defaultValue - Default value if not found\n * @returns {*} Value or default\n */\nexport function safeGet(obj, path, defaultValue = null) {\n  try {\n    return path.split('.').reduce((current, prop) => current?.[prop], obj) ?? defaultValue;\n  } catch {\n    return defaultValue;\n  }\n}\n\n/**\n * Create AbortSignal with timeout (polyfill for older browsers)\n * @param {number} timeoutMs - Timeout in milliseconds\n * @returns {AbortSignal} Abort signal that fires after timeout\n */\nexport function createTimeoutSignal(timeoutMs) {\n  // Use native AbortSignal.timeout if available (modern browsers)\n  if (typeof AbortSignal !== 'undefined' && AbortSignal.timeout) {\n    return AbortSignal.timeout(timeoutMs);\n  }\n\n  // Polyfill for older browsers\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => {\n    controller.abort(new Error(`Timeout after ${timeoutMs}ms`));\n  }, timeoutMs);\n\n  // Clean up timeout if signal is aborted for other reasons\n  controller.signal.addEventListener('abort', () => {\n    clearTimeout(timeoutId);\n  }, { once: true });\n\n  return controller.signal;\n}\n\n/**\n * Sleep utility for retry logic\n * @param {number} ms - Milliseconds to sleep\n * @returns {Promise} Promise that resolves after delay\n */\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/**\n * Case Listener Service\n * Polls Cloud Function for active cases\n */\nimport { KIOSK_CONFIG } from '../config.js';\nimport {\n  createTimeoutSignal,\n  sleep,\n  validateCaseData,\n  isGPSStale,\n  CONSTANTS,\n} from '../utils.js';\n\nexport class CaseListener {\n  constructor() {\n    this.baseUrl = KIOSK_CONFIG.caseSharingUrl;\n    this.pollInterval = KIOSK_CONFIG.pollInterval;\n    // Don't cache hospitalId - always read from KIOSK_CONFIG for real-time updates\n    this.intervalId = null;\n    this.cases = new Map();\n    this.onUpdate = null;\n    this.onError = null;\n    this.lastFetchTime = null;\n    this.isConnected = false;\n    this.retryCount = 0;\n  }\n\n  /**\n   * Start listening for cases\n   * @param {Function} onUpdateCallback - Called when cases update\n   * @param {Function} onErrorCallback - Called on errors\n   */\n  start(onUpdateCallback, onErrorCallback) {\n    this.onUpdate = onUpdateCallback;\n    this.onError = onErrorCallback;\n\n    // Initial fetch\n    this.fetchCases();\n\n    // Start polling\n    this.intervalId = setInterval(() => {\n      this.fetchCases();\n    }, this.pollInterval);\n\n    console.log('[CaseListener] Started polling every', this.pollInterval, 'ms');\n  }\n\n  /**\n   * Stop listening\n   */\n  stop() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n      console.log('[CaseListener] Stopped polling');\n    }\n  }\n\n  /**\n   * Fetch cases from API with retry logic\n   */\n  async fetchCases() {\n    let lastError = null;\n\n    for (let attempt = 0; attempt <= CONSTANTS.MAX_RETRY_ATTEMPTS; attempt++) {\n      try {\n        const url = this.buildFetchUrl();\n\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n          },\n          signal: createTimeoutSignal(CONSTANTS.FETCH_TIMEOUT_MS),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to fetch cases');\n        }\n\n        // Success! Reset retry count and update connection status\n        this.retryCount = 0;\n        this.isConnected = true;\n        this.lastFetchTime = new Date();\n\n        // Process cases\n        this.processCases(data.cases || []);\n\n        // Notify listeners\n        if (this.onUpdate) {\n          this.onUpdate({\n            cases: Array.from(this.cases.values()),\n            timestamp: data.timestamp,\n            count: data.count,\n          });\n        }\n\n        return; // Success, exit function\n      } catch (error) {\n        lastError = error;\n        console.error(`[CaseListener] Fetch error (attempt ${attempt + 1}/${CONSTANTS.MAX_RETRY_ATTEMPTS + 1}):`, error);\n\n        // If not the last attempt, wait before retrying\n        if (attempt < CONSTANTS.MAX_RETRY_ATTEMPTS) {\n          const delayMs = CONSTANTS.RETRY_DELAYS_MS[attempt] || 8000;\n          console.log(`[CaseListener] Retrying in ${delayMs}ms...`);\n          await sleep(delayMs);\n        }\n      }\n    }\n\n    // All retries failed\n    console.error('[CaseListener] All retry attempts failed:', lastError);\n    this.isConnected = false;\n    this.retryCount++;\n\n    if (this.onError) {\n      this.onError(lastError);\n    }\n  }\n\n  /**\n   * Build fetch URL with filters\n   */\n  buildFetchUrl() {\n    let url = `${this.baseUrl}/get-cases`;\n\n    const params = new URLSearchParams();\n\n    // Always read from config for latest hospital selection\n    if (KIOSK_CONFIG.hospitalId) {\n      params.append('hospitalId', KIOSK_CONFIG.hospitalId);\n    }\n\n    params.append('status', 'in_transit');\n\n    const queryString = params.toString();\n    if (queryString) {\n      url += `?${queryString}`;\n    }\n\n    return url;\n  }\n\n  /**\n   * Process fetched cases with validation and enrichment\n   */\n  processCases(newCases) {\n    const oldCaseIds = new Set(this.cases.keys());\n    const newCaseIds = new Set();\n\n    // Process each case\n    newCases.forEach((caseData) => {\n      // Validate case data\n      if (!validateCaseData(caseData)) {\n        console.warn('[CaseListener] Invalid case data, skipping:', caseData);\n        return;\n      }\n\n      const caseId = caseData.id;\n      newCaseIds.add(caseId);\n\n      const isNew = !this.cases.has(caseId);\n\n      // Calculate GPS staleness\n      const gpsStale = isGPSStale(\n        caseData.tracking?.lastUpdated,\n        KIOSK_CONFIG.staleGpsMinutes\n      );\n\n      // Enrich tracking data\n      const enrichedTracking = {\n        ...(caseData.tracking || {}),\n        gpsStale,\n      };\n\n      // Store case with enriched data\n      this.cases.set(caseId, {\n        ...caseData,\n        tracking: enrichedTracking,\n        isNew, // Flag for new case alert\n        receivedAt: isNew ? new Date() : this.cases.get(caseId).receivedAt,\n      });\n\n      // Log new cases\n      if (isNew) {\n        console.log('[CaseListener] New case:', caseId, this.getCaseSummary(caseData));\n      }\n    });\n\n    // Remove cases that are no longer active\n    oldCaseIds.forEach((caseId) => {\n      if (!newCaseIds.has(caseId)) {\n        console.log('[CaseListener] Case removed:', caseId);\n        this.cases.delete(caseId);\n      }\n    });\n  }\n\n  /**\n   * Get case summary for logging\n   */\n  getCaseSummary(caseData) {\n    const ichPercent = Math.round((caseData.results?.ich?.probability || 0) * 100);\n    const eta = caseData.tracking?.duration || '?';\n\n    return {\n      module: caseData.moduleType,\n      ich: `${ichPercent}%`,\n      eta: `${eta} min`,\n      urgency: caseData.urgency,\n    };\n  }\n\n  /**\n   * Get all cases\n   */\n  getCases() {\n    return Array.from(this.cases.values());\n  }\n\n  /**\n   * Get case by ID\n   */\n  getCase(caseId) {\n    return this.cases.get(caseId);\n  }\n\n  /**\n   * Mark case as viewed (clear isNew flag)\n   */\n  markViewed(caseId) {\n    const caseData = this.cases.get(caseId);\n    if (caseData) {\n      caseData.isNew = false;\n      this.cases.set(caseId, caseData);\n    }\n  }\n\n  /**\n   * Get connection status\n   */\n  getStatus() {\n    return {\n      isConnected: this.isConnected,\n      lastFetchTime: this.lastFetchTime,\n      caseCount: this.cases.size,\n      isPolling: this.intervalId !== null,\n    };\n  }\n}\n\n// Export singleton\nexport const caseListener = new CaseListener();\n","/**\n * Dashboard UI - Case List View\n */\nimport { URGENCY_CONFIG, KIOSK_CONFIG } from '../config.js';\nimport { getRiskColor, getTimeAgo, formatETA, isCaseStale } from '../utils.js';\n\nexport function renderDashboard(cases) {\n  const container = document.getElementById('casesContainer');\n  if (!container) {\n    return;\n  }\n\n  if (!cases || cases.length === 0) {\n    container.innerHTML = `\n      <div class=\"no-cases-state\">\n        <div class=\"no-cases-icon\">✓</div>\n        <h2>Keine aktiven Fälle / No Active Cases</h2>\n        <p>Das System ist aktiv und überwacht eingehende Fälle</p>\n        <p>System is active and monitoring incoming cases</p>\n      </div>\n    `;\n    return;\n  }\n\n  // Sort by urgency and ETA\n  const sortedCases = sortCases(cases);\n\n  // Apply display limit\n  const displayCases = sortedCases.slice(0, KIOSK_CONFIG.maxCasesDisplay);\n\n  // Render case cards\n  const cardsHTML = displayCases.map((caseData) => renderCaseCard(caseData)).join('');\n\n  // Show warning if cases were truncated\n  const truncatedWarning = sortedCases.length > KIOSK_CONFIG.maxCasesDisplay\n    ? `<div class=\"truncated-warning\" role=\"alert\">\n         Showing ${KIOSK_CONFIG.maxCasesDisplay} of ${sortedCases.length} cases\n       </div>`\n    : '';\n\n  container.innerHTML = `\n    ${truncatedWarning}\n    <div class=\"cases-grid\" role=\"list\" aria-label=\"Active cases\">\n      ${cardsHTML}\n    </div>\n  `;\n}\n\n/**\n * Sort cases by urgency and ETA\n */\nfunction sortCases(cases) {\n  return [...cases].sort((a, b) => {\n    const urgencyA = URGENCY_CONFIG[a.urgency]?.priority ?? 10;\n    const urgencyB = URGENCY_CONFIG[b.urgency]?.priority ?? 10;\n\n    if (urgencyA !== urgencyB) {\n      return urgencyA - urgencyB;\n    }\n\n    // Same urgency - sort by ETA\n    const etaA = a.tracking?.duration || 9999;\n    const etaB = b.tracking?.duration || 9999;\n    return etaA - etaB;\n  });\n}\n\n/**\n * Render individual case card\n */\nfunction renderCaseCard(caseData) {\n  const urgencyConfig = URGENCY_CONFIG[caseData.urgency] || URGENCY_CONFIG.STANDARD;\n  const ichPercent = Math.round((caseData.results?.ich?.probability || 0) * 100);\n  const lvoPercent = caseData.results?.lvo ? Math.round(caseData.results.lvo.probability * 100) : null;\n  const formattedETA = formatETA(caseData.tracking?.duration);\n  const distance = caseData.tracking?.distance || '?';\n\n  // Check GPS staleness\n  const isGpsStale = caseData.tracking?.gpsStale || false;\n\n  // Check if case is old/stale\n  const caseIsStale = isCaseStale(caseData.createdAt);\n\n  // Calculate time since received\n  const receivedAgo = getTimeAgo(caseData.createdAt);\n\n  // Create accessible label\n  const ariaLabel = `${caseData.urgency} case, ${caseData.ambulanceId}, ICH risk ${ichPercent}%, ETA ${formattedETA} minutes`;\n\n  return `\n    <div class=\"case-card ${caseData.urgency.toLowerCase()} ${caseData.isNew ? 'new-case' : ''} ${caseIsStale ? 'stale-case' : ''}\"\n         data-case-id=\"${caseData.id}\"\n         style=\"border-color: ${urgencyConfig.color}\"\n         role=\"listitem\"\n         tabindex=\"0\"\n         aria-label=\"${ariaLabel}\">\n\n      <div class=\"case-header\">\n        <div class=\"urgency-badge\" style=\"background: ${urgencyConfig.color}\">\n          ${urgencyConfig.icon} ${caseData.urgency}\n        </div>\n        <div class=\"case-meta\">\n          <span class=\"ambulance-id\">${caseData.ambulanceId}</span>\n          <span class=\"module-type\">${caseData.moduleType}</span>\n        </div>\n      </div>\n\n      <div class=\"case-risks\">\n        <div class=\"risk-circle-container\">\n          <div class=\"risk-circle ${ichPercent > 70 ? 'critical' : ichPercent > 50 ? 'high' : 'medium'}\"\n               style=\"background: conic-gradient(${getRiskColor(ichPercent)} ${ichPercent}%, rgba(255,255,255,0.1) 0%)\">\n            <div class=\"risk-value\">${ichPercent}%</div>\n          </div>\n          <div class=\"risk-label\">ICH</div>\n        </div>\n\n        ${lvoPercent !== null ? `\n          <div class=\"risk-circle-container\">\n            <div class=\"risk-circle ${lvoPercent > 50 ? 'high' : 'medium'}\"\n                 style=\"background: conic-gradient(${getRiskColor(lvoPercent)} ${lvoPercent}%, rgba(255,255,255,0.1) 0%)\">\n              <div class=\"risk-value\">${lvoPercent}%</div>\n            </div>\n            <div class=\"risk-label\">LVO</div>\n          </div>\n        ` : ''}\n      </div>\n\n      <div class=\"case-eta\">\n        <div class=\"eta-main ${isGpsStale ? 'stale' : ''}\">\n          <span class=\"eta-value\">${formattedETA}</span>\n          <span class=\"eta-unit\">${formattedETA === 'Arrived' || formattedETA === '?' ? '' : 'min'}</span>\n        </div>\n        <div class=\"eta-details\">\n          <span class=\"distance\">${typeof distance === 'number' ? distance.toFixed(1) : distance} km</span>\n          ${isGpsStale ? '<span class=\"gps-stale-warning\" role=\"alert\">⚠️ GPS stale</span>' : ''}\n        </div>\n      </div>\n\n      <div class=\"case-footer\">\n        <span class=\"case-time\">${receivedAgo}</span>\n        <span class=\"view-details\">View Details →</span>\n      </div>\n    </div>\n  `;\n}\n\n","/**\n * Case Detail Modal\n * Shows full assessment results for a case\n */\nimport { getRiskColor, getRiskLevel, formatTime, formatLabel } from '../utils.js';\n\nexport function showCaseDetail(caseData) {\n  const modal = document.getElementById('caseDetailModal');\n  if (!modal) {\n    return;\n  }\n\n  const modalContent = modal.querySelector('.modal-content');\n  if (!modalContent) {\n    return;\n  }\n\n  // Render detail view\n  modalContent.innerHTML = renderDetailView(caseData);\n\n  // Show modal\n  modal.style.display = 'flex';\n}\n\nfunction renderDetailView(caseData) {\n  const { results, formData, moduleType, ambulanceId, tracking, urgency } = caseData;\n  const ichPercent = Math.round((results?.ich?.probability || 0) * 100);\n  const lvoPercent = results?.lvo ? Math.round(results.lvo.probability * 100) : null;\n\n  return `\n    <div class=\"case-detail-container\">\n      <div class=\"detail-header\">\n        <div class=\"header-left\">\n          <h2 id=\"modalTitle\">Case Details</h2>\n          <div class=\"case-badges\">\n            <span class=\"badge urgency-badge\">${urgency}</span>\n            <span class=\"badge module-badge\">${moduleType}</span>\n            <span class=\"badge ambulance-badge\">${ambulanceId}</span>\n          </div>\n        </div>\n        <button class=\"close-modal\">✕ Close</button>\n      </div>\n\n      <div class=\"detail-content\">\n        <div class=\"content-section\">\n          <h3>🎯 Risk Assessment</h3>\n          <div class=\"risk-display-large\">\n            <div class=\"risk-item-large\">\n              <div class=\"risk-label-large\">ICH Risk</div>\n              <div class=\"risk-value-large\" style=\"color: ${getRiskColor(ichPercent)}\">${ichPercent}%</div>\n              <div class=\"risk-level-large\">${getRiskLevel(ichPercent)}</div>\n            </div>\n\n            ${lvoPercent !== null ? `\n              <div class=\"risk-item-large\">\n                <div class=\"risk-label-large\">LVO Risk</div>\n                <div class=\"risk-value-large\" style=\"color: ${getRiskColor(lvoPercent)}\">${lvoPercent}%</div>\n                <div class=\"risk-level-large\">${getRiskLevel(lvoPercent)}</div>\n              </div>\n            ` : ''}\n          </div>\n        </div>\n\n        <div class=\"content-section\">\n          <h3>📍 Tracking Information</h3>\n          <div class=\"tracking-grid\">\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">ETA</div>\n              <div class=\"tracking-value\">${tracking?.duration || '?'} min</div>\n            </div>\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">Distance</div>\n              <div class=\"tracking-value\">${tracking?.distance ? tracking.distance.toFixed(1) : '?'} km</div>\n            </div>\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">Last Update</div>\n              <div class=\"tracking-value\">${tracking?.lastUpdated ? formatTime(tracking.lastUpdated) : 'Unknown'}</div>\n            </div>\n            <div class=\"tracking-item\">\n              <div class=\"tracking-label\">Estimated Arrival</div>\n              <div class=\"tracking-value\">${tracking?.estimatedArrival ? formatTime(tracking.estimatedArrival) : 'Unknown'}</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"content-section\">\n          <h3>📋 Assessment Data</h3>\n          <div class=\"data-table\">\n            ${renderFormData(formData)}\n          </div>\n        </div>\n\n        ${results?.ich?.drivers ? `\n          <div class=\"content-section\">\n            <h3>⚡ Risk Factors</h3>\n            ${renderDrivers(results.ich.drivers)}\n          </div>\n        ` : ''}\n      </div>\n\n      <div class=\"detail-footer\">\n        <button class=\"close-modal secondary-button\">Close</button>\n      </div>\n    </div>\n  `;\n}\n\n\nfunction renderFormData(formData) {\n  if (!formData || Object.keys(formData).length === 0) {\n    return '<p>No assessment data available</p>';\n  }\n\n  return Object.entries(formData)\n    .filter(([key, value]) => value !== null && value !== undefined && value !== '')\n    .map(\n      ([key, value]) => `\n      <div class=\"data-row\">\n        <div class=\"data-label\">${formatLabel(key)}</div>\n        <div class=\"data-value\">${value}</div>\n      </div>\n    `,\n    )\n    .join('');\n}\n\nfunction renderDrivers(drivers) {\n  if (!drivers || (!drivers.positive && !drivers.negative)) {\n    return '<p>No driver data available</p>';\n  }\n\n  const positive = drivers.positive || [];\n  const negative = drivers.negative || [];\n\n  return `\n    <div class=\"drivers-container\">\n      <div class=\"drivers-column\">\n        <h4>⬆ Increasing Risk</h4>\n        ${positive.length > 0\n      ? positive\n        .map(\n          (d) => `\n              <div class=\"driver-item positive\">\n                <span class=\"driver-label\">${formatLabel(d.label)}</span>\n                <span class=\"driver-value\">${(Math.abs(d.weight) * 100).toFixed(1)}%</span>\n              </div>\n            `,\n        )\n        .join('')\n      : '<p class=\"no-drivers\">None</p>'\n    }\n      </div>\n\n      <div class=\"drivers-column\">\n        <h4>⬇ Decreasing Risk</h4>\n        ${negative.length > 0\n      ? negative\n        .map(\n          (d) => `\n              <div class=\"driver-item negative\">\n                <span class=\"driver-label\">${formatLabel(d.label)}</span>\n                <span class=\"driver-value\">${(Math.abs(d.weight) * 100).toFixed(1)}%</span>\n              </div>\n            `,\n        )\n        .join('')\n      : '<p class=\"no-drivers\">None</p>'\n    }\n      </div>\n    </div>\n  `;\n}\n","/**\n * Kiosk Main Application\n * Entry point for Notaufnahme kiosk display\n */\nimport './styles.css';\nimport { KIOSK_CONFIG } from './config.js';\nimport { caseListener } from './services/case-listener.js';\nimport { renderDashboard } from './ui/dashboard.js';\nimport { showCaseDetail } from './ui/case-detail.js';\nimport { CONSTANTS } from './utils.js';\n\n// Application state\nlet currentCases = [];\nlet audioContext = null;\nlet clockIntervalId = null;\nlet isFirstLoad = true;\n\n/**\n * Initialize kiosk application\n */\nasync function initializeKiosk() {\n  console.log('[Kiosk] Initializing...', KIOSK_CONFIG);\n\n  // Initialize hospital selector\n  initializeHospitalSelector();\n\n  // Start clock\n  updateClock();\n  clockIntervalId = setInterval(updateClock, 1000);\n\n  // Initialize audio if enabled\n  if (KIOSK_CONFIG.playAudioAlert) {\n    initializeAudio();\n  }\n\n  // Start case listener\n  caseListener.start(\n    (data) => handleCaseUpdate(data),\n    (error) => handleError(error),\n  );\n\n  // Add event listeners\n  attachEventListeners();\n\n  // Add cleanup on page unload\n  window.addEventListener('beforeunload', cleanup);\n\n  console.log('[Kiosk] Initialized successfully');\n}\n\n/**\n * Cleanup resources before page unload\n */\nfunction cleanup() {\n  console.log('[Kiosk] Cleaning up resources...');\n\n  // Stop polling\n  caseListener.stop();\n\n  // Clear clock interval\n  if (clockIntervalId) {\n    clearInterval(clockIntervalId);\n    clockIntervalId = null;\n  }\n\n  // Close audio context\n  if (audioContext && audioContext.state !== 'closed') {\n    audioContext.close().catch((err) => {\n      console.warn('[Kiosk] Error closing audio context:', err);\n    });\n  }\n}\n\n/**\n * Handle case updates\n */\nfunction handleCaseUpdate(data) {\n  const previousCount = currentCases.length;\n  currentCases = data.cases || [];\n\n  console.log('[Kiosk] Cases updated:', {\n    count: currentCases.length,\n    previous: previousCount,\n  });\n\n  // Update UI\n  renderDashboard(currentCases);\n  updateHeader(data);\n\n  // Check for new cases (skip alert on first load)\n  const newCases = currentCases.filter((c) => c.isNew);\n  if (newCases.length > 0 && !isFirstLoad) {\n    // Show alert for new cases\n    playNewCaseAlert();\n    flashScreen();\n\n    // Mark as viewed after showing alert\n    setTimeout(() => {\n      newCases.forEach((c) => caseListener.markViewed(c.id));\n    }, CONSTANTS.NEW_CASE_VIEWED_DELAY_MS);\n  }\n\n  // Mark first load complete\n  if (isFirstLoad) {\n    isFirstLoad = false;\n  }\n\n  // Update connection status\n  updateConnectionStatus(true);\n}\n\n/**\n * Handle errors\n */\nfunction handleError(error) {\n  console.error('[Kiosk] Error:', error);\n  updateConnectionStatus(false);\n\n  // Show error in UI if no cases\n  if (currentCases.length === 0) {\n    const container = document.getElementById('casesContainer');\n    if (container) {\n      container.innerHTML = `\n        <div class=\"error-state\">\n          <div class=\"error-icon\">⚠️</div>\n          <h2>Verbindungsfehler / Connection Error</h2>\n          <p>${error.message || 'Unable to connect to case monitoring system'}</p>\n          <p class=\"error-hint\">Checking again in ${KIOSK_CONFIG.pollInterval / 1000} seconds...</p>\n        </div>\n      `;\n    }\n  }\n}\n\n/**\n * Initialize hospital selector\n */\nfunction initializeHospitalSelector() {\n  // Import available hospitals and setHospital function\n  const selector = document.getElementById('hospitalSelector');\n  if (!selector) return;\n\n  // Dynamically import hospitals list\n  import('./config.js').then(({ AVAILABLE_HOSPITALS, setHospital }) => {\n    // Populate selector\n    selector.innerHTML = AVAILABLE_HOSPITALS.map(h => {\n      // Check if this option should be selected\n      const isSelected = (h.id === 'ALL' && KIOSK_CONFIG.hospitalId === null) ||\n                         (h.id === KIOSK_CONFIG.hospitalId);\n      return `<option value=\"${h.id}\" ${isSelected ? 'selected' : ''}>${h.name}</option>`;\n    }).join('');\n\n    // Handle selection changes\n    selector.addEventListener('change', (e) => {\n      const hospitalId = e.target.value;\n      if (confirm(`Switch to ${e.target.options[e.target.selectedIndex].text}?\\n\\nThis will reload the page.`)) {\n        setHospital(hospitalId);\n      } else {\n        // Restore previous selection\n        selector.value = KIOSK_CONFIG.hospitalId === null ? 'ALL' : KIOSK_CONFIG.hospitalId;\n      }\n    });\n  });\n}\n\n/**\n * Update header information\n */\nfunction updateHeader(data) {\n  // Update case count\n  const countBadge = document.getElementById('caseCount');\n  if (countBadge) {\n    const count = data.count || 0;\n    countBadge.textContent = `${count} ${count === 1 ? 'Case' : 'Cases'}`;\n    countBadge.className = `case-count-badge ${count > 0 ? 'has-cases' : ''}`;\n  }\n}\n\n/**\n * Update connection status indicator\n */\nfunction updateConnectionStatus(connected) {\n  const status = document.getElementById('connectionStatus');\n  if (status) {\n    status.className = `status-indicator ${connected ? 'connected' : 'disconnected'}`;\n    status.title = connected ? 'Connected' : 'Disconnected';\n    status.setAttribute('aria-label', `Connection status: ${connected ? 'connected' : 'disconnected'}`);\n  }\n}\n\n/**\n * Update clock\n */\nfunction updateClock() {\n  const clockElement = document.getElementById('currentTime');\n  if (clockElement) {\n    const now = new Date();\n    clockElement.textContent = now.toLocaleTimeString('de-DE', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    });\n  }\n}\n\n/**\n * Initialize audio context\n */\nfunction initializeAudio() {\n  // Create audio context on first user interaction\n  document.addEventListener(\n    'click',\n    () => {\n      if (!audioContext) {\n        audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        console.log('[Kiosk] Audio initialized');\n      }\n    },\n    { once: true },\n  );\n}\n\n/**\n * Play new case alert with audio context resume\n */\nasync function playNewCaseAlert() {\n  if (!KIOSK_CONFIG.playAudioAlert || !audioContext) {\n    return;\n  }\n\n  try {\n    // Resume audio context if suspended (browser throttling)\n    if (audioContext.state === 'suspended') {\n      await audioContext.resume();\n      console.log('[Kiosk] Audio context resumed');\n    }\n\n    // Generate alert beep\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n\n    oscillator.frequency.value = CONSTANTS.ALERT_BEEP_FREQUENCY_HZ;\n    oscillator.type = 'sine';\n\n    gainNode.gain.setValueAtTime(CONSTANTS.ALERT_BEEP_VOLUME, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(\n      0.01,\n      audioContext.currentTime + CONSTANTS.ALERT_BEEP_DURATION_SEC\n    );\n\n    oscillator.start(audioContext.currentTime);\n    oscillator.stop(audioContext.currentTime + CONSTANTS.ALERT_BEEP_DURATION_SEC);\n\n    console.log('[Kiosk] Alert sound played');\n  } catch (error) {\n    console.warn('[Kiosk] Audio playback failed:', error);\n  }\n}\n\n/**\n * Flash screen for new case\n */\nfunction flashScreen() {\n  document.body.classList.add('flash-alert');\n\n  setTimeout(() => {\n    document.body.classList.remove('flash-alert');\n  }, 1000);\n}\n\n/**\n * Attach event listeners\n */\nfunction attachEventListeners() {\n  // Click on case card to show details\n  document.addEventListener('click', (e) => {\n    const caseCard = e.target.closest('.case-card');\n    if (caseCard) {\n      const caseId = caseCard.dataset.caseId;\n      if (caseId) {\n        const caseData = caseListener.getCase(caseId);\n        if (caseData) {\n          showCaseDetail(caseData);\n          caseListener.markViewed(caseId);\n        }\n      }\n    }\n\n    // Close modal\n    if (e.target.classList.contains('modal-overlay') || e.target.classList.contains('close-modal')) {\n      closeModal();\n    }\n  });\n\n  // Keyboard navigation\n  document.addEventListener('keydown', (e) => {\n    // ESC key to close modal\n    if (e.key === 'Escape') {\n      closeModal();\n      return;\n    }\n\n    // Enter or Space on case card to open details\n    if (e.key === 'Enter' || e.key === ' ') {\n      const caseCard = e.target.closest('.case-card');\n      if (caseCard) {\n        e.preventDefault(); // Prevent scroll on Space\n        const caseId = caseCard.dataset.caseId;\n        if (caseId) {\n          const caseData = caseListener.getCase(caseId);\n          if (caseData) {\n            showCaseDetail(caseData);\n            caseListener.markViewed(caseId);\n          }\n        }\n      }\n    }\n  });\n\n  // Visibility change - resume polling if tab becomes visible\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      console.log('[Kiosk] Tab visible - fetching latest cases');\n      caseListener.fetchCases();\n    }\n  });\n}\n\n/**\n * Close case detail modal\n */\nfunction closeModal() {\n  const modal = document.getElementById('caseDetailModal');\n  if (modal) {\n    modal.style.display = 'none';\n    modal.querySelector('.modal-content').innerHTML = '';\n  }\n}\n\n/**\n * Handle application errors\n */\nwindow.addEventListener('error', (event) => {\n  console.error('[Kiosk] Unhandled error:', event.error);\n});\n\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('[Kiosk] Unhandled rejection:', event.reason);\n});\n\n/**\n * Start application when DOM ready\n */\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeKiosk);\n} else {\n  initializeKiosk();\n}\n\n/**\n * Export for debugging\n */\nwindow.kioskApp = {\n  getCases: () => currentCases,\n  getStatus: () => caseListener.getStatus(),\n  refresh: () => caseListener.fetchCases(),\n  playAlert: () => playNewCaseAlert(),\n};\n"],"file":"assets/index-BgkKko1y.js"}