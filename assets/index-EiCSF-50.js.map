{"version":3,"mappings":"qpDAOaA,EAAe,CAE1B,eAAgB,yDAGhB,aAAc,IAGd,iBAAkB,EAGlB,gBAAiB,EAIjB,YAAa,IAAM,CACjB,MAAMC,EAAS,aAAa,QAAQ,mBAAmB,EAEvD,OAAIA,IAAW,KAAa,YACxBA,IAAW,GAAW,KACnBA,CACT,KAGA,aAAc,aAAa,QAAQ,qBAAqB,GAAK,oCAG7D,iBAAkB,0CAGlB,eAAgB,GAChB,iBAAkB,GAGlB,kBAAmB,GACnB,gBAAiB,GAGjB,MAAO,MACT,EAGaC,EAAsB,CACjC,CAAE,GAAI,YAAa,KAAM,qCACzB,CAAE,GAAI,YAAa,KAAM,4BACzB,CAAE,GAAI,YAAa,KAAM,gCACzB,CAAE,GAAI,YAAa,KAAM,wBACzB,CAAE,GAAI,YAAa,KAAM,iCACzB,CAAE,GAAI,YAAa,KAAM,2CACzB,CAAE,GAAI,YAAa,KAAM,iCACzB,CAAE,GAAI,MAAO,KAAM,oCACrB,EAGO,SAASC,EAAYC,EAAY,CACtC,MAAMC,EAAWH,EAAoB,KAAKI,GAAKA,EAAE,KAAOF,CAAU,EAC9DC,IAEED,IAAe,OACjB,aAAa,QAAQ,oBAAqB,EAAE,EAC5C,aAAa,QAAQ,sBAAuBC,EAAS,IAAI,IAEzD,aAAa,QAAQ,oBAAqBD,CAAU,EACpD,aAAa,QAAQ,sBAAuBC,EAAS,IAAI,GAE3DL,EAAa,WAAaI,IAAe,MAAQ,KAAOA,EACxDJ,EAAa,aAAeK,EAAS,KAErC,OAAO,SAAS,SAEpB,CAEO,MAAME,EAAiB,CAC5B,UAAW,CACT,MAAO,UACP,KAAM,KACN,SAAU,GAEZ,cAAe,CACb,MAAO,UACP,KAAM,IACN,SAAU,GAEZ,OAAQ,CACN,MAAO,UACP,KAAM,KACN,SAAU,GAEZ,SAAU,CACR,MAAO,UACP,KAAM,KACN,SAAU,EAEd,mKC/FaC,EAAY,CACvB,yBAA0B,IAC1B,wBAAyB,GACzB,wBAAyB,IACzB,kBAAmB,GACnB,iBAAkB,IAClB,mBAAoB,EACpB,gBAAiB,CAAC,IAAM,IAAM,GAAI,EAClC,6BAA8B,EAChC,EAOO,SAASC,EAAaC,EAAS,CACpC,OAAIA,EAAU,GACL,UAELA,EAAU,GACL,UAELA,EAAU,GACL,UAEF,SACT,CA+CO,SAASC,EAAqBC,EAAU,CAE7C,OAAIA,EAAS,UACJA,EAAS,UAKdA,EAAS,WACJA,EAAS,WAIdA,EAAS,UAAU,YACdA,EAAS,SAAS,YAIpBA,EAAS,WAAa,IAAI,IACnC,CAOO,SAASC,EAAWC,EAAW,CACpC,MAAMC,EAAM,IAAI,KAGVC,EAAOF,aAAqB,KAAOA,EAAY,IAAI,KAAKA,CAAS,EAGvE,GAAI,MAAME,EAAK,QAAO,CAAE,EACtB,MAAO,UAGT,MAAMC,EAAU,KAAK,IAAI,EAAG,KAAK,OAAOF,EAAMC,GAAQ,GAAI,CAAC,EAE3D,GAAIC,EAAU,GACZ,MAAO,GAAGA,CAAO,QAEnB,MAAMC,EAAU,KAAK,MAAMD,EAAU,EAAE,EACvC,OAAIC,EAAU,GACL,GAAGA,CAAO,QAGZ,GADO,KAAK,MAAMA,EAAU,EAAE,CACtB,KAAKA,EAAU,EAAE,OAClC,CAkBO,SAASC,EAAUC,EAAU,CAClC,GAAIA,GAAa,MAAkCA,IAAa,IAC9D,MAAO,IAGT,MAAMC,EAAM,OAAOD,GAAa,SAAW,WAAWA,CAAQ,EAAIA,EAElE,OAAI,MAAMC,CAAG,EACJ,IAGLA,GAAO,EACF,UAGLA,EAAM,EACD,MAGF,KAAK,MAAMA,CAAG,EAAE,SAAQ,CACjC,CAQO,SAASC,EAAWC,EAAaC,EAAmB,EAAG,CAC5D,GAAI,CAACD,EACH,MAAO,GAGT,GAAI,CACF,MAAME,EAAa,IAAI,KAAKF,CAAW,EACvC,OAAI,MAAME,EAAW,QAAO,CAAE,EACrB,IAGG,IAAI,KACUA,IAAe,IAAO,IAC5BD,CACtB,MAAQ,CACN,MAAO,EACT,CACF,CAQO,SAASE,EAAYZ,EAAWU,EAAmBhB,EAAU,6BAA8B,CAChG,GAAI,CAACM,EACH,MAAO,GAGT,GAAI,CAEF,MAAMa,EAAUb,aAAqB,KAAOA,EAAY,IAAI,KAAKA,CAAS,EAC1E,OAAI,MAAMa,EAAQ,QAAO,CAAE,EAClB,IAGG,IAAI,KACUA,IAAY,IAAO,IACzBH,CACtB,MAAQ,CACN,MAAO,EACT,CACF,CAOO,SAASI,EAAiBhB,EAAU,CAMzC,MALI,GAACA,GAAY,OAAOA,GAAa,UAKjC,CAACA,EAAS,IAAM,OAAOA,EAAS,IAAO,SAK7C,CAsBO,SAASiB,EAAoBC,EAAW,CAE7C,GAAI,OAAO,YAAgB,KAAe,YAAY,QACpD,OAAO,YAAY,QAAQA,CAAS,EAItC,MAAMC,EAAa,IAAI,gBACjBC,EAAY,WAAW,IAAM,CACjCD,EAAW,MAAM,IAAI,MAAM,iBAAiBD,CAAS,IAAI,CAAC,CAC5D,EAAGA,CAAS,EAGZ,OAAAC,EAAW,OAAO,iBAAiB,QAAS,IAAM,CAChD,aAAaC,CAAS,CACxB,EAAG,CAAE,KAAM,GAAM,EAEVD,EAAW,MACpB,CAOO,SAASE,EAAMC,EAAI,CACxB,OAAO,IAAI,QAASC,GAAY,WAAWA,EAASD,CAAE,CAAC,CACzD,CC9QO,MAAME,CAAa,CACxB,aAAc,CACZ,KAAK,QAAUpC,EAAa,eAC5B,KAAK,aAAeA,EAAa,aAEjC,KAAK,WAAa,KAClB,KAAK,MAAQ,IAAI,IACjB,KAAK,SAAW,KAChB,KAAK,QAAU,KACf,KAAK,cAAgB,KACrB,KAAK,YAAc,GACnB,KAAK,WAAa,CACpB,CAOA,MAAMqC,EAAkBC,EAAiB,CACvC,KAAK,SAAWD,EAChB,KAAK,QAAUC,EAGf,KAAK,WAAU,EAGf,KAAK,WAAa,YAAY,IAAM,CAClC,KAAK,WAAU,CACjB,EAAG,KAAK,YAAY,EAEpB,QAAQ,IAAI,uCAAwC,KAAK,aAAc,IAAI,CAC7E,CAKA,MAAO,CACD,KAAK,aACP,cAAc,KAAK,UAAU,EAC7B,KAAK,WAAa,KAClB,QAAQ,IAAI,gCAAgC,EAEhD,CAKA,MAAM,YAAa,CACjB,IAAIC,EAAY,KAEhB,QAASC,EAAU,EAAGA,GAAWhC,EAAU,mBAAoBgC,IAC7D,GAAI,CACF,MAAMC,EAAM,KAAK,cAAa,EAExBC,EAAW,MAAM,MAAMD,EAAK,CAChC,OAAQ,MACR,QAAS,CACP,OAAU,kBACtB,EACU,OAAQZ,EAAoBrB,EAAU,gBAAgB,CAChE,CAAS,EAED,GAAI,CAACkC,EAAS,GACZ,MAAM,IAAI,MAAM,QAAQA,EAAS,MAAM,KAAKA,EAAS,UAAU,EAAE,EAGnE,MAAMC,EAAO,MAAMD,EAAS,KAAI,EAEhC,GAAI,CAACC,EAAK,QACR,MAAM,IAAI,MAAMA,EAAK,OAAS,uBAAuB,EAIvD,KAAK,WAAa,EAClB,KAAK,YAAc,GACnB,KAAK,cAAgB,IAAI,KAGzB,KAAK,aAAaA,EAAK,OAAS,EAAE,EAG9B,KAAK,UACP,KAAK,SAAS,CACZ,MAAO,MAAM,KAAK,KAAK,MAAM,OAAM,CAAE,EACrC,UAAWA,EAAK,UAChB,MAAOA,EAAK,KACxB,CAAW,EAGH,MACF,OAASC,EAAO,CAKd,GAJAL,EAAYK,EACZ,QAAQ,MAAM,uCAAuCJ,EAAU,CAAC,IAAIhC,EAAU,mBAAqB,CAAC,KAAMoC,CAAK,EAG3GJ,EAAUhC,EAAU,mBAAoB,CAC1C,MAAMqC,EAAUrC,EAAU,gBAAgBgC,CAAO,GAAK,IACtD,QAAQ,IAAI,8BAA8BK,CAAO,OAAO,EACxD,MAAMZ,EAAMY,CAAO,CACrB,CACF,CAIF,QAAQ,MAAM,4CAA6CN,CAAS,EACpE,KAAK,YAAc,GACnB,KAAK,aAED,KAAK,SACP,KAAK,QAAQA,CAAS,CAE1B,CAKA,eAAgB,CACd,IAAIE,EAAM,GAAG,KAAK,OAAO,aAEzB,MAAMK,EAAS,IAAI,gBAGf9C,EAAa,YACf8C,EAAO,OAAO,aAAc9C,EAAa,UAAU,EAGrD8C,EAAO,OAAO,SAAU,YAAY,EAEpC,MAAMC,EAAcD,EAAO,SAAQ,EACnC,OAAIC,IACFN,GAAO,IAAIM,CAAW,IAGjBN,CACT,CAKA,aAAaO,EAAU,CACrB,MAAMC,EAAa,IAAI,IAAI,KAAK,MAAM,KAAI,CAAE,EACtCC,EAAa,IAAI,IAGvBF,EAAS,QAASpC,GAAa,CAE7B,GAAI,CAACgB,EAAiBhB,CAAQ,EAAG,CAC/B,QAAQ,KAAK,8CAA+CA,CAAQ,EACpE,MACF,CAEA,MAAMuC,EAASvC,EAAS,GACxBsC,EAAW,IAAIC,CAAM,EAErB,MAAMC,EAAQ,CAAC,KAAK,MAAM,IAAID,CAAM,EAG9BE,EAAW/B,EACfV,EAAS,UAAU,YACnBZ,EAAa,eACrB,EAGYsD,EAAmB,CACvB,GAAI1C,EAAS,UAAY,GACzB,SAAAyC,CACR,EAGM,KAAK,MAAM,IAAIF,EAAQ,CACrB,GAAGvC,EACH,SAAU0C,EACV,MAAAF,EACA,WAAYA,EAAQ,IAAI,KAAS,KAAK,MAAM,IAAID,CAAM,EAAE,UAChE,CAAO,EAGGC,IACF,QAAQ,IAAI,2BAA4BD,EAAQ,KAAK,eAAevC,CAAQ,CAAC,EAC7E,QAAQ,IAAI,6BAA8B,CACxC,UAAWA,EAAS,UACpB,UAAWA,EAAS,UACpB,WAAYA,EAAS,WACrB,oBAAqBA,EAAS,UAAU,WAClD,CAAS,EAEL,CAAC,EAGDqC,EAAW,QAASE,GAAW,CACxBD,EAAW,IAAIC,CAAM,IACxB,QAAQ,IAAI,+BAAgCA,CAAM,EAClD,KAAK,MAAM,OAAOA,CAAM,EAE5B,CAAC,CACH,CAKA,eAAevC,EAAU,CACvB,MAAM2C,EAAa,KAAK,OAAO3C,EAAS,SAAS,KAAK,aAAe,GAAK,GAAG,EACvES,EAAMT,EAAS,UAAU,UAAY,IAE3C,MAAO,CACL,OAAQA,EAAS,WACjB,IAAK,GAAG2C,CAAU,IAClB,IAAK,GAAGlC,CAAG,OACX,QAAST,EAAS,OACxB,CACE,CAKA,UAAW,CACT,OAAO,MAAM,KAAK,KAAK,MAAM,OAAM,CAAE,CACvC,CAKA,QAAQuC,EAAQ,CACd,OAAO,KAAK,MAAM,IAAIA,CAAM,CAC9B,CAKA,WAAWA,EAAQ,CACjB,MAAMvC,EAAW,KAAK,MAAM,IAAIuC,CAAM,EAClCvC,IACFA,EAAS,MAAQ,GACjB,KAAK,MAAM,IAAIuC,EAAQvC,CAAQ,EAEnC,CAOA,MAAM,YAAYuC,EAAQ,CACxB,GAAI,CACF,MAAMV,EAAM,GAAG,KAAK,OAAO,gBAErBC,EAAW,MAAM,MAAMD,EAAK,CAChC,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,OAAU,kBACpB,EACQ,KAAM,KAAK,UAAU,CACnB,OAAAU,EACA,OAAQ,oBAClB,CAAS,EACD,OAAQ,YAAY,QAAQ,GAAI,CACxC,CAAO,EAED,GAAI,CAACT,EAAS,GACZ,MAAM,IAAI,MAAM,QAAQA,EAAS,MAAM,KAAKA,EAAS,UAAU,EAAE,EAGnE,MAAMC,EAAO,MAAMD,EAAS,KAAI,EAEhC,GAAI,CAACC,EAAK,QACR,MAAM,IAAI,MAAMA,EAAK,OAAS,wBAAwB,EAIxD,YAAK,MAAM,OAAOQ,CAAM,EACxB,QAAQ,IAAI,iCAAkCA,CAAM,EAGhD,KAAK,UACP,KAAK,SAAS,CACZ,MAAO,MAAM,KAAK,KAAK,MAAM,OAAM,CAAE,EACrC,UAAW,IAAI,KAAI,EAAG,YAAW,EACjC,MAAO,KAAK,MAAM,IAC5B,CAAS,EAGIR,CACT,OAASC,EAAO,CACd,cAAQ,MAAM,gCAAiCA,CAAK,EAC9CA,CACR,CACF,CAKA,WAAY,CACV,MAAO,CACL,YAAa,KAAK,YAClB,cAAe,KAAK,cACpB,UAAW,KAAK,MAAM,KACtB,UAAW,KAAK,aAAe,IACrC,CACE,CACF,CAGO,MAAMY,EAAe,IAAIpB,ECvTzB,SAASqB,EAAgBC,EAAO,CACrC,MAAMC,EAAY,SAAS,eAAe,gBAAgB,EAC1D,GAAI,CAACA,EACH,OAGF,GAAI,CAACD,GAASA,EAAM,SAAW,EAAG,CAChCC,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQtB,MACF,CAGA,MAAMC,EAAcC,EAAUH,CAAK,EAM7BI,EAHeF,EAAY,MAAM,EAAG5D,EAAa,eAAe,EAGvC,IAAKY,GAAamD,EAAenD,CAAQ,CAAC,EAAE,KAAK,EAAE,EAG5EoD,EAAmBJ,EAAY,OAAS5D,EAAa,gBACvD;AAAA,mBACaA,EAAa,eAAe,OAAO4D,EAAY,MAAM;AAAA,eAElE,GAEJD,EAAU,UAAY;AAAA,MAClBK,CAAgB;AAAA;AAAA,QAEdF,CAAS;AAAA;AAAA,GAGjB,CAKA,SAASD,EAAUH,EAAO,CACxB,MAAO,CAAC,GAAGA,CAAK,EAAE,KAAK,CAACO,EAAGC,IAAM,CAC/B,MAAMC,EAAW5D,EAAe0D,EAAE,OAAO,GAAG,UAAY,GAClDG,EAAW7D,EAAe2D,EAAE,OAAO,GAAG,UAAY,GAExD,GAAIC,IAAaC,EACf,OAAOD,EAAWC,EAIpB,MAAMC,EAAOJ,EAAE,UAAU,UAAY,KAC/BK,EAAOJ,EAAE,UAAU,UAAY,KACrC,OAAOG,EAAOC,CAChB,CAAC,CACH,CAKA,SAASC,EAAoBpB,EAAQ,CACnC,GAAI,CAACA,EAAQ,MAAO,WAGpB,IAAIqB,EAAO,EACX,QAAS,EAAI,EAAG,EAAIrB,EAAO,OAAQ,IACjCqB,GAASA,GAAQ,GAAKA,EAAQrB,EAAO,WAAW,CAAC,EACjDqB,EAAOA,EAAOA,EAKhB,MAAO,OADM,KAAK,IAAIA,EAAO,GAAK,EAAE,WAAW,SAAS,EAAG,GAAG,CAC5C,EACpB,CAKA,SAAST,EAAenD,EAAU,CAChC,MAAM6D,EAAgBlE,EAAeK,EAAS,OAAO,GAAKL,EAAe,SACnEgD,EAAa,KAAK,OAAO3C,EAAS,SAAS,KAAK,aAAe,GAAK,GAAG,EACvE8D,EAAa9D,EAAS,SAAS,IAAM,KAAK,MAAMA,EAAS,QAAQ,IAAI,YAAc,GAAG,EAAI,KAC1F+D,EAAexD,EAAUP,EAAS,UAAU,QAAQ,EACpDgE,EAAWhE,EAAS,UAAU,UAAY,IAG1CiE,EAAcN,EAAoB3D,EAAS,EAAE,EAG7CkE,EAAalE,EAAS,UAAU,UAAY,GAG5CmE,EAAoBpE,EAAqBC,CAAQ,EAGjDoE,EAActD,EAAYqD,CAAiB,EAG3CE,EAAcpE,EAAWkE,CAAiB,EAG1CG,EAAY,GAAGtE,EAAS,OAAO,UAAUiE,CAAW,cAActB,CAAU,UAAUoB,CAAY,WAExG,MAAO;AAAA,4BACmB/D,EAAS,QAAQ,YAAW,CAAE,IAAIA,EAAS,MAAQ,WAAa,EAAE,IAAIoE,EAAc,aAAe,EAAE;AAAA,yBACxGpE,EAAS,EAAE;AAAA,gCACJ6D,EAAc,KAAK;AAAA;AAAA;AAAA,uBAG5BS,CAAS;AAAA;AAAA;AAAA,wDAGwBT,EAAc,KAAK;AAAA,YAC/DA,EAAc,IAAI,IAAI7D,EAAS,OAAO;AAAA;AAAA;AAAA,uCAGXiE,CAAW;AAAA,sCACZjE,EAAS,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAM7CuE,EAAkB5B,EAAY,KAAK,CAAC;AAAA;AAAA;AAAA,UAGtCmB,IAAe,KAAO;AAAA;AAAA,cAElBS,EAAkBT,EAAY,KAAK,CAAC;AAAA;AAAA,UAEtC,EAAE;AAAA;AAAA;AAAA;AAAA,+BAIiBI,EAAa,QAAU,EAAE;AAAA,oCACpBH,CAAY;AAAA,mCACbA,IAAiB,WAAaA,IAAiB,IAAM,GAAK,KAAK;AAAA;AAAA;AAAA,mCAG/D,OAAOC,GAAa,SAAWA,EAAS,QAAQ,CAAC,EAAIA,CAAQ;AAAA,YACpFE,EAAa,mEAAqE,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,kCAK9DG,CAAW;AAAA;AAAA;AAAA;AAAA,GAK7C,CAKA,SAASE,EAAkBzE,EAAS0E,EAAO,CACzC,MAAMC,EAAQ5E,EAAaC,CAAO,EAC5B4E,EAAgB,KAAK,GAAK,IAC1BC,EAASD,GAAiB,EAAI5E,EAAU,KAG9C,MAAO;AAAA,gCAFWA,EAAU,GAAK,WAAaA,EAAU,GAAK,OAASA,EAAU,GAAK,SAAW,KAGzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBvB2E,CAAK;AAAA;AAAA,4BAEKC,CAAa;AAAA,6BACZC,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAczB7E,CAAO;AAAA;AAAA;AAAA,8BAGa0E,CAAK;AAAA,GAEnC,CCtMA,IAAII,EAAe,GACfC,EAAe,KACfC,EAAkB,KAClBC,EAAc,GAKlB,eAAeC,GAAkB,CAC/B,QAAQ,IAAI,0BAA2B5F,CAAY,EAGnD6F,GAA0B,EAG1BC,GAAe,EAGfC,EAAW,EACXL,EAAkB,YAAYK,EAAa,GAAI,EAI7CC,GAAe,EAIjBxC,EAAa,MACVb,GAASsD,EAAiBtD,CAAI,EAC9BC,GAAUsD,EAAYtD,CAAK,CAChC,EAGEuD,GAAoB,EAGpB,OAAO,iBAAiB,eAAgBC,CAAO,EAE/C,QAAQ,IAAI,kCAAkC,CAChD,CAKA,SAASA,GAAU,CACjB,QAAQ,IAAI,kCAAkC,EAG9C5C,EAAa,KAAI,EAGbkC,IACF,cAAcA,CAAe,EAC7BA,EAAkB,MAIhBD,GAAgBA,EAAa,QAAU,UACzCA,EAAa,MAAK,EAAG,MAAOY,GAAQ,CAClC,QAAQ,KAAK,uCAAwCA,CAAG,CAC1D,CAAC,CAEL,CAKA,SAASJ,EAAiBtD,EAAM,CAC9B,MAAM2D,EAAgBd,EAAa,OACnCA,EAAe7C,EAAK,OAAS,GAE7B,QAAQ,IAAI,yBAA0B,CACpC,MAAO6C,EAAa,OACpB,SAAUc,CACd,CAAG,EAGD7C,EAAgB+B,CAAY,EAC5Be,GAAa5D,CAAI,EAGjB,MAAMK,EAAWwC,EAAa,OAAQgB,GAAMA,EAAE,KAAK,EAC/CxD,EAAS,OAAS,GAAK,CAAC2C,IAE1Bc,EAAgB,EAChBC,GAAW,EAGX,WAAW,IAAM,CACf1D,EAAS,QAASwD,GAAMhD,EAAa,WAAWgD,EAAE,EAAE,CAAC,CACvD,EAAGhG,EAAU,wBAAwB,GAInCmF,IACFA,EAAc,IAIhBgB,EAAuB,EAAI,CAC7B,CAKA,SAAST,EAAYtD,EAAO,CAK1B,GAJA,QAAQ,MAAM,iBAAkBA,CAAK,EACrC+D,EAAuB,EAAK,EAGxBnB,EAAa,SAAW,EAAG,CAC7B,MAAM7B,EAAY,SAAS,eAAe,gBAAgB,EACtDA,IACFA,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA,eAIbf,EAAM,SAAW,6CAA6C;AAAA,oDACzB5C,EAAa,aAAe,GAAI;AAAA;AAAA,QAIlF,CACF,CAKA,SAAS6F,IAA6B,CAEpC,MAAMe,EAAW,SAAS,eAAe,kBAAkB,EACtDA,GAGNC,EAAA,oCAAA3G,EAAA,YAAAC,CAAA,QAAC,2BAAA2G,CAAA,EAAoB,2BAAA5G,EAAA,YAAAC,CAAA,WAAE,KAAK,CAAC,CAAE,oBAAAD,EAAqB,YAAAC,KAAkB,CAEnEyG,EAAS,UAAY1G,EAAoB,IAAII,GAAK,CAEhD,MAAMyG,EAAczG,EAAE,KAAO,OAASN,EAAa,aAAe,MAC9CM,EAAE,KAAON,EAAa,WAC1C,MAAO,kBAAkBM,EAAE,EAAE,KAAKyG,EAAa,WAAa,EAAE,IAAIzG,EAAE,IAAI,WAC1E,CAAC,EAAE,KAAK,EAAE,EAGVsG,EAAS,iBAAiB,SAAWI,GAAM,CACzC,MAAM5G,EAAa4G,EAAE,OAAO,MACxB,QAAQ,aAAaA,EAAE,OAAO,QAAQA,EAAE,OAAO,aAAa,EAAE,IAAI;AAAA;AAAA,2BAAiC,EACrG7G,EAAYC,CAAU,EAGtBwG,EAAS,MAAQ5G,EAAa,aAAe,KAAO,MAAQA,EAAa,UAE7E,CAAC,CACH,CAAC,CACH,CAKA,SAAS8F,IAAkB,CAEzB,MAAMmB,EAAa,aAAa,QAAQ,aAAa,GAAKjH,EAAa,MACvEkH,EAAWD,CAAU,EAGrB,MAAME,EAAc,SAAS,eAAe,aAAa,EACrDA,GACFA,EAAY,iBAAiB,QAASC,EAAW,EAGnD,QAAQ,IAAI,6BAA8BH,CAAU,CACtD,CAKA,SAASG,IAAc,CAErB,MAAMC,GADe,SAAS,gBAAgB,aAAa,YAAY,GAAK,UAC1C,OAAS,QAAU,OAErDH,EAAWG,CAAQ,EACnB,aAAa,QAAQ,cAAeA,CAAQ,EAE5C,QAAQ,IAAI,6BAA8BA,CAAQ,CACpD,CAKA,SAASH,EAAWI,EAAO,CACzB,SAAS,gBAAgB,aAAa,aAAcA,CAAK,EAGzD,MAAMC,EAAY,SAAS,cAAc,aAAa,EAClDA,IACFA,EAAU,YAAcD,IAAU,OAAS,KAAO,KAEtD,CAKA,SAASf,GAAa5D,EAAM,CAE1B,MAAM6E,EAAa,SAAS,eAAe,WAAW,EACtD,GAAIA,EAAY,CACd,MAAMC,EAAQ9E,EAAK,OAAS,EAC5B6E,EAAW,YAAc,GAAGC,CAAK,IAAIA,IAAU,EAAI,OAAS,OAAO,GACnED,EAAW,UAAY,oBAAoBC,EAAQ,EAAI,YAAc,EAAE,EACzE,CACF,CAKA,SAASd,EAAuBe,EAAW,CACzC,MAAMC,EAAS,SAAS,eAAe,kBAAkB,EACrDA,IACFA,EAAO,UAAY,oBAAoBD,EAAY,YAAc,cAAc,GAC/EC,EAAO,MAAQD,EAAY,YAAc,eACzCC,EAAO,aAAa,aAAc,sBAAsBD,EAAY,YAAc,cAAc,EAAE,EAEtG,CAKA,SAAS3B,GAAc,CACrB,MAAM6B,EAAe,SAAS,eAAe,aAAa,EAC1D,GAAIA,EAAc,CAChB,MAAM7G,EAAM,IAAI,KAChB6G,EAAa,YAAc7G,EAAI,mBAAmB,QAAS,CACzD,KAAM,UACN,OAAQ,UACR,OAAQ,SACd,CAAK,CACH,CACF,CAKA,SAASiF,IAAkB,CAEzB,SAAS,iBACP,QACA,IAAM,CACCP,IACHA,EAAe,IAAK,OAAO,cAAgB,OAAO,oBAClD,QAAQ,IAAI,2BAA2B,EAE3C,EACA,CAAE,KAAM,EAAI,CAChB,CACA,CAKA,eAAegB,GAAmB,CAChC,GAAqChB,EAIrC,GAAI,CAEEA,EAAa,QAAU,cACzB,MAAMA,EAAa,OAAM,EACzB,QAAQ,IAAI,+BAA+B,GAI7C,MAAMoC,EAAapC,EAAa,iBAAgB,EAC1CqC,EAAWrC,EAAa,WAAU,EAExCoC,EAAW,QAAQC,CAAQ,EAC3BA,EAAS,QAAQrC,EAAa,WAAW,EAEzCoC,EAAW,UAAU,MAAQrH,EAAU,wBACvCqH,EAAW,KAAO,OAElBC,EAAS,KAAK,eAAetH,EAAU,kBAAmBiF,EAAa,WAAW,EAClFqC,EAAS,KAAK,6BACZ,IACArC,EAAa,YAAcjF,EAAU,uBAC3C,EAEIqH,EAAW,MAAMpC,EAAa,WAAW,EACzCoC,EAAW,KAAKpC,EAAa,YAAcjF,EAAU,uBAAuB,EAE5E,QAAQ,IAAI,4BAA4B,CAC1C,OAASoC,EAAO,CACd,QAAQ,KAAK,iCAAkCA,CAAK,CACtD,CACF,CAKA,SAAS8D,IAAc,CACrB,SAAS,KAAK,UAAU,IAAI,aAAa,EAEzC,WAAW,IAAM,CACf,SAAS,KAAK,UAAU,OAAO,aAAa,CAC9C,EAAG,GAAI,CACT,CAKA,SAASP,IAAuB,CAE9B,SAAS,iBAAiB,QAAU,GAAM,CACxC,MAAM4B,EAAW,EAAE,OAAO,QAAQ,YAAY,EAC9C,GAAIA,EAAU,CACZ,MAAM5E,EAAS4E,EAAS,QAAQ,OAChC,GAAI5E,EAAQ,CAEV,MAAM6E,EAAS,uDAAuD7E,CAAM,GAC5E,OAAO,SAAS,KAAO6E,EACvBxE,EAAa,WAAWL,CAAM,CAChC,CACF,CAGA,MAAM8E,EAAgB,EAAE,OAAO,QAAQ,sBAAsB,EAC7D,GAAIA,EAAe,CACjB,MAAM9E,EAAS8E,EAAc,QAAQ,OACjC9E,GACF+E,EAAkB/E,CAAM,CAE5B,EAGI,EAAE,OAAO,UAAU,SAAS,eAAe,GAAK,EAAE,OAAO,UAAU,SAAS,aAAa,IAC3FgF,EAAU,CAEd,CAAC,EAGD,SAAS,iBAAiB,UAAY,GAAM,CAE1C,GAAI,EAAE,MAAQ,SAAU,CACtBA,EAAU,EACV,MACF,CAGA,GAAI,EAAE,MAAQ,SAAW,EAAE,MAAQ,IAAK,CACtC,MAAMJ,EAAW,EAAE,OAAO,QAAQ,YAAY,EAC9C,GAAIA,EAAU,CACZ,EAAE,eAAc,EAChB,MAAM5E,EAAS4E,EAAS,QAAQ,OAChC,GAAI5E,EAAQ,CAEV,MAAM6E,EAAS,uDAAuD7E,CAAM,GAC5E,OAAO,SAAS,KAAO6E,EACvBxE,EAAa,WAAWL,CAAM,CAChC,CACF,CACF,CACF,CAAC,EAGD,SAAS,iBAAiB,mBAAoB,IAAM,CAC9C,SAAS,kBAAoB,YAC/B,QAAQ,IAAI,6CAA6C,EACzDK,EAAa,WAAU,EAE3B,CAAC,EAGD,OAAO,iBAAiB,cAAgB,GAAM,CAC5C,MAAML,EAAS,EAAE,QAAQ,OACrBA,GACF,QAAQ,IAAI,0CAA2CA,CAAM,EAC7D+E,EAAkB/E,CAAM,GAExB,QAAQ,MAAM,0CAA0C,CAE5D,CAAC,CACH,CAKA,eAAe+E,EAAkB/E,EAAQ,CACvC,MAAMvC,EAAW4C,EAAa,QAAQL,CAAM,EAC5C,GAAI,CAACvC,EAAU,CACb,QAAQ,KAAK,0BAA2BuC,CAAM,EAC9C,MACF,CAGA,MAAMiF,EAAiB;AAAA;AAAA,aACaxH,EAAS,WAAW;AAAA,UACvBA,EAAS,UAAU;AAAA,YACjB,KAAK,OAAOA,EAAS,SAAS,KAAK,aAAe,GAAK,GAAG,CAAC;AAAA;AAAA,oCAK9F,GAAI,CAFc,QAAQwH,CAAc,EAExB,CACd,QAAQ,IAAI,kCAAkC,EAC9C,MACF,CAEA,GAAI,CAEF,MAAMH,EAAgB,SAAS,cAAc,kBAAkB9E,CAAM,IAAI,EACrE8E,IACFA,EAAc,SAAW,GACzBA,EAAc,YAAc,iBAI9B,MAAMzE,EAAa,YAAYL,CAAM,EAErC,QAAQ,IAAI,uCAAwCA,CAAM,EAG1DgF,EAAU,EAGV,SAAS,KAAK,UAAU,IAAI,eAAe,EAC3C,WAAW,IAAM,CACf,SAAS,KAAK,UAAU,OAAO,eAAe,CAChD,EAAG,GAAG,CAER,OAASvF,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,EAGtD,MAAM;AAAA,EAA4BA,EAAM,OAAO;AAAA;AAAA,qCAA0C,EAGzF,MAAMqF,EAAgB,SAAS,cAAc,kBAAkB9E,CAAM,IAAI,EACrE8E,IACFA,EAAc,SAAW,GACzBA,EAAc,YAAc,mBAEhC,CACF,CAKA,SAASE,GAAa,CACpB,MAAME,EAAQ,SAAS,eAAe,iBAAiB,EACnDA,IACFA,EAAM,MAAM,QAAU,OACtBA,EAAM,cAAc,gBAAgB,EAAE,UAAY,GAEtD,CAKA,OAAO,iBAAiB,QAAUC,GAAU,CAC1C,QAAQ,MAAM,2BAA4BA,EAAM,KAAK,CACvD,CAAC,EAED,OAAO,iBAAiB,qBAAuBA,GAAU,CACvD,QAAQ,MAAM,+BAAgCA,EAAM,MAAM,CAC5D,CAAC,EAKG,SAAS,aAAe,UAC1B,SAAS,iBAAiB,mBAAoB1C,CAAe,EAE7DA,EAAe,EAMjB,OAAO,SAAW,CAChB,SAAU,IAAMJ,EAChB,UAAW,IAAMhC,EAAa,UAAS,EACvC,QAAS,IAAMA,EAAa,WAAU,EACtC,UAAW,IAAMiD,EAAgB,CACnC","names":["KIOSK_CONFIG","stored","AVAILABLE_HOSPITALS","setHospital","hospitalId","hospital","h","URGENCY_CONFIG","CONSTANTS","getRiskColor","percent","getRelevantTimestamp","caseData","getTimeAgo","timestamp","now","then","seconds","minutes","formatETA","duration","eta","isGPSStale","lastUpdated","thresholdMinutes","lastUpdate","isCaseStale","created","validateCaseData","createTimeoutSignal","timeoutMs","controller","timeoutId","sleep","ms","resolve","CaseListener","onUpdateCallback","onErrorCallback","lastError","attempt","url","response","data","error","delayMs","params","queryString","newCases","oldCaseIds","newCaseIds","caseId","isNew","gpsStale","enrichedTracking","ichPercent","caseListener","renderDashboard","cases","container","sortedCases","sortCases","cardsHTML","renderCaseCard","truncatedWarning","a","b","urgencyA","urgencyB","etaA","etaB","generatePatientCode","hash","urgencyConfig","lvoPercent","formattedETA","distance","patientCode","isGpsStale","relevantTimestamp","caseIsStale","receivedAgo","ariaLabel","renderRiskRingSVG","label","color","circumference","offset","currentCases","audioContext","clockIntervalId","isFirstLoad","initializeKiosk","initializeHospitalSelector","initializeTheme","updateClock","initializeAudio","handleCaseUpdate","handleError","attachEventListeners","cleanup","err","previousCount","updateHeader","c","playNewCaseAlert","flashScreen","updateConnectionStatus","selector","__vitePreload","config","isSelected","e","savedTheme","applyTheme","themeToggle","toggleTheme","newTheme","theme","themeIcon","countBadge","count","connected","status","clockElement","oscillator","gainNode","caseCard","pwaUrl","dismissButton","handleDismissCase","closeModal","confirmMessage","modal","event"],"ignoreList":[],"sources":["../../src/config.js","../../src/utils.js","../../src/services/case-listener.js","../../src/ui/dashboard.js","../../src/main.js"],"sourcesContent":["/**\n * Kiosk Configuration\n */\n\n// Check if running in development\nconst isDevelopment = import.meta.env.DEV;\n\nexport const KIOSK_CONFIG = {\n  // API Configuration\n  caseSharingUrl: 'https://case-sharing-564499947017.europe-west3.run.app',\n\n  // Polling interval (milliseconds)\n  pollInterval: 5000, // 5 seconds\n\n  // Auto-archive time (matches server)\n  autoArchiveHours: 2,\n\n  // GPS stale warning threshold\n  staleGpsMinutes: 5,\n\n  // Hospital ID (can be changed via UI selector)\n  // Leave as null to show all cases, or set to specific hospital ID\n  hospitalId: (() => {\n    const stored = localStorage.getItem('kiosk_hospital_id');\n    // Explicitly check for null (not set) vs empty string (ALL selected)\n    if (stored === null) return 'BY-NS-001'; // Default on first load\n    if (stored === '') return null; // \"ALL\" hospitals\n    return stored; // Specific hospital\n  })(),\n\n  // Hospital name for display (updated dynamically)\n  hospitalName: localStorage.getItem('kiosk_hospital_name') || 'LMU Klinikum München - Großhadern',\n\n  // Google Maps API Key (for live tracking map)\n  googleMapsApiKey: 'AIzaSyACBndIj8HD1wwZ4Vw8PDDI0bIe6DoBExI',\n\n  // Alert settings\n  playAudioAlert: true,\n  audioAlertVolume: 0.5, // 0.0 to 1.0\n\n  // Display settings\n  showArchivedCases: false, // Hide archived cases\n  maxCasesDisplay: 20, // Maximum cases to show\n\n  // Theme\n  theme: 'dark', // 'dark' or 'light'\n};\n\n// Available hospitals for selector\nexport const AVAILABLE_HOSPITALS = [\n  { id: 'BY-NS-001', name: 'LMU Klinikum München - Großhadern' },\n  { id: 'BY-NS-002', name: 'Klinikum Rechts der Isar' },\n  { id: 'BY-NS-003', name: 'Helios Klinikum München West' },\n  { id: 'BY-NS-004', name: 'Klinikum Bogenhausen' },\n  { id: 'BW-NS-001', name: 'Universitätsklinikum Tübingen' },\n  { id: 'BW-NS-005', name: 'Klinikum Stuttgart - Katharinenhospital' },\n  { id: 'BW-NS-003', name: 'Universitätsklinikum Freiburg' },\n  { id: 'ALL', name: '🌐 All Hospitals (Show All Cases)' },\n];\n\n// Function to update hospital selection\nexport function setHospital(hospitalId) {\n  const hospital = AVAILABLE_HOSPITALS.find(h => h.id === hospitalId);\n  if (hospital) {\n    // Store the actual value or empty string for \"ALL\"\n    if (hospitalId === 'ALL') {\n      localStorage.setItem('kiosk_hospital_id', '');\n      localStorage.setItem('kiosk_hospital_name', hospital.name);\n    } else {\n      localStorage.setItem('kiosk_hospital_id', hospitalId);\n      localStorage.setItem('kiosk_hospital_name', hospital.name);\n    }\n    KIOSK_CONFIG.hospitalId = hospitalId === 'ALL' ? null : hospitalId;\n    KIOSK_CONFIG.hospitalName = hospital.name;\n    // Reload to apply changes\n    window.location.reload();\n  }\n}\n\nexport const URGENCY_CONFIG = {\n  IMMEDIATE: {\n    color: '#ff4444',\n    icon: '🚨',\n    priority: 0,\n  },\n  TIME_CRITICAL: {\n    color: '#ff8800',\n    icon: '⏰',\n    priority: 1,\n  },\n  URGENT: {\n    color: '#ffcc00',\n    icon: '⚠️',\n    priority: 2,\n  },\n  STANDARD: {\n    color: '#4a90e2',\n    icon: '🏥',\n    priority: 3,\n  },\n};\n","/**\n * Shared Utility Functions\n */\n\n// Constants for magic numbers\nexport const CONSTANTS = {\n  NEW_CASE_VIEWED_DELAY_MS: 2000,\n  ALERT_BEEP_DURATION_SEC: 0.5,\n  ALERT_BEEP_FREQUENCY_HZ: 880, // A5 note\n  ALERT_BEEP_VOLUME: 0.5,\n  FETCH_TIMEOUT_MS: 8000,\n  MAX_RETRY_ATTEMPTS: 3,\n  RETRY_DELAYS_MS: [2000, 4000, 8000], // Exponential backoff\n  CASE_STALE_THRESHOLD_MINUTES: 30,\n};\n\n/**\n * Get risk color based on percentage\n * @param {number} percent - Risk percentage (0-100)\n * @returns {string} Hex color code\n */\nexport function getRiskColor(percent) {\n  if (percent > 70) {\n    return '#ff4444';\n  }\n  if (percent > 50) {\n    return '#ff8800';\n  }\n  if (percent > 30) {\n    return '#ffcc00';\n  }\n  return '#4a90e2';\n}\n\n/**\n * Get risk level label based on percentage\n * @param {number} percent - Risk percentage (0-100)\n * @returns {string} Risk level description\n */\nexport function getRiskLevel(percent) {\n  if (percent > 70) {\n    return 'Very High Risk';\n  }\n  if (percent > 50) {\n    return 'High Risk';\n  }\n  if (percent > 30) {\n    return 'Moderate Risk';\n  }\n  return 'Low Risk';\n}\n\n/**\n * Format timestamp as time string\n * @param {string} isoString - ISO date string\n * @returns {string} Formatted time (HH:MM)\n */\nexport function formatTime(isoString) {\n  try {\n    const date = new Date(isoString);\n    if (isNaN(date.getTime())) {\n      throw new Error('Invalid date');\n    }\n    return date.toLocaleTimeString('de-DE', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  } catch (error) {\n    console.warn('[Utils] Invalid time:', isoString, error);\n    return 'Invalid time';\n  }\n}\n\n/**\n * Get the most relevant timestamp for display\n * Priority: updatedAt > receivedAt > tracking.lastUpdated > createdAt\n * @param {object} caseData - Case data object\n * @returns {string|Date} Timestamp (ISO string or Date object)\n */\nexport function getRelevantTimestamp(caseData) {\n  // Priority 1: updatedAt (when case was last modified/submitted)\n  if (caseData.updatedAt) {\n    return caseData.updatedAt;\n  }\n\n  // Priority 2: receivedAt (when kiosk first saw this case - most reliable)\n  // This is our local timestamp and most accurate for \"when did we see this\"\n  if (caseData.receivedAt) {\n    return caseData.receivedAt;\n  }\n\n  // Priority 3: tracking.lastUpdated (recent GPS update)\n  if (caseData.tracking?.lastUpdated) {\n    return caseData.tracking.lastUpdated;\n  }\n\n  // Priority 4: createdAt (fallback - may be hours old if form was started earlier)\n  return caseData.createdAt || new Date();\n}\n\n/**\n * Get time ago string with negative time protection\n * @param {string|Date} timestamp - ISO date string or Date object\n * @returns {string} Time ago description\n */\nexport function getTimeAgo(timestamp) {\n  const now = new Date();\n\n  // Handle both Date objects and ISO strings\n  const then = timestamp instanceof Date ? timestamp : new Date(timestamp);\n\n  // Protect against invalid dates or future dates\n  if (isNaN(then.getTime())) {\n    return 'Unknown';\n  }\n\n  const seconds = Math.max(0, Math.floor((now - then) / 1000));\n\n  if (seconds < 60) {\n    return `${seconds}s ago`;\n  }\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) {\n    return `${minutes}m ago`;\n  }\n  const hours = Math.floor(minutes / 60);\n  return `${hours}h ${minutes % 60}m ago`;\n}\n\n/**\n * Format label from snake_case to Title Case\n * @param {string} key - Key to format\n * @returns {string} Formatted label\n */\nexport function formatLabel(key) {\n  return key\n    .replace(/_/g, ' ')\n    .replace(/\\b\\w/g, (l) => l.toUpperCase());\n}\n\n/**\n * Format ETA with special cases\n * @param {number|string} duration - Duration in minutes\n * @returns {string} Formatted ETA\n */\nexport function formatETA(duration) {\n  if (duration === null || duration === undefined || duration === '?') {\n    return '?';\n  }\n\n  const eta = typeof duration === 'string' ? parseFloat(duration) : duration;\n\n  if (isNaN(eta)) {\n    return '?';\n  }\n\n  if (eta <= 0) {\n    return 'Arrived';\n  }\n\n  if (eta < 1) {\n    return '< 1';\n  }\n\n  return Math.round(eta).toString();\n}\n\n/**\n * Check if GPS data is stale\n * @param {string} lastUpdated - ISO date string of last GPS update\n * @param {number} thresholdMinutes - Staleness threshold in minutes\n * @returns {boolean} True if GPS is stale\n */\nexport function isGPSStale(lastUpdated, thresholdMinutes = 5) {\n  if (!lastUpdated) {\n    return true;\n  }\n\n  try {\n    const lastUpdate = new Date(lastUpdated);\n    if (isNaN(lastUpdate.getTime())) {\n      return true;\n    }\n\n    const now = new Date();\n    const minutesAgo = (now - lastUpdate) / (1000 * 60);\n    return minutesAgo > thresholdMinutes;\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Check if case is stale (old)\n * @param {string|Date} timestamp - ISO date string or Date object\n * @param {number} thresholdMinutes - Staleness threshold in minutes\n * @returns {boolean} True if case is stale\n */\nexport function isCaseStale(timestamp, thresholdMinutes = CONSTANTS.CASE_STALE_THRESHOLD_MINUTES) {\n  if (!timestamp) {\n    return false;\n  }\n\n  try {\n    // Handle both Date objects and ISO strings\n    const created = timestamp instanceof Date ? timestamp : new Date(timestamp);\n    if (isNaN(created.getTime())) {\n      return false;\n    }\n\n    const now = new Date();\n    const minutesAgo = (now - created) / (1000 * 60);\n    return minutesAgo > thresholdMinutes;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validate case data structure\n * @param {object} caseData - Case object to validate\n * @returns {boolean} True if valid\n */\nexport function validateCaseData(caseData) {\n  if (!caseData || typeof caseData !== 'object') {\n    return false;\n  }\n\n  // Required fields\n  if (!caseData.id || typeof caseData.id !== 'string') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Safe get nested property\n * @param {object} obj - Object to query\n * @param {string} path - Dot-separated path (e.g., 'results.ich.probability')\n * @param {*} defaultValue - Default value if not found\n * @returns {*} Value or default\n */\nexport function safeGet(obj, path, defaultValue = null) {\n  try {\n    return path.split('.').reduce((current, prop) => current?.[prop], obj) ?? defaultValue;\n  } catch {\n    return defaultValue;\n  }\n}\n\n/**\n * Create AbortSignal with timeout (polyfill for older browsers)\n * @param {number} timeoutMs - Timeout in milliseconds\n * @returns {AbortSignal} Abort signal that fires after timeout\n */\nexport function createTimeoutSignal(timeoutMs) {\n  // Use native AbortSignal.timeout if available (modern browsers)\n  if (typeof AbortSignal !== 'undefined' && AbortSignal.timeout) {\n    return AbortSignal.timeout(timeoutMs);\n  }\n\n  // Polyfill for older browsers\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => {\n    controller.abort(new Error(`Timeout after ${timeoutMs}ms`));\n  }, timeoutMs);\n\n  // Clean up timeout if signal is aborted for other reasons\n  controller.signal.addEventListener('abort', () => {\n    clearTimeout(timeoutId);\n  }, { once: true });\n\n  return controller.signal;\n}\n\n/**\n * Sleep utility for retry logic\n * @param {number} ms - Milliseconds to sleep\n * @returns {Promise} Promise that resolves after delay\n */\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n/**\n * Medical field label mapping for consistent terminology\n * Maps technical field names to user-friendly medical labels\n */\nconst FIELD_LABEL_MAP = {\n  // Age and demographics\n  age_years: 'Alter / Age',\n  age: 'Alter / Age',\n\n  // Blood pressure\n  systolic_bp: 'Systolischer Blutdruck / Systolic BP',\n  diastolic_bp: 'Diastolischer Blutdruck / Diastolic BP',\n  systolic_blood_pressure: 'Systolischer Blutdruck / Systolic BP',\n  diastolic_blood_pressure: 'Diastolischer Blutdruck / Diastolic BP',\n  blood_pressure_systolic: 'Systolischer Blutdruck / Systolic BP',\n  blood_pressure_diastolic: 'Diastolischer Blutdruck / Diastolic BP',\n\n  // Biomarkers\n  gfap_value: 'GFAP-Wert / GFAP Level',\n  gfap: 'GFAP-Wert / GFAP Level',\n  gfap_level: 'GFAP-Wert / GFAP Level',\n\n  // Clinical scores\n  fast_ed_score: 'FAST-ED Score',\n  fast_ed: 'FAST-ED Score',\n  fast_ed_total: 'FAST-ED Score',\n  nihss: 'NIHSS Score',\n  nihss_score: 'NIHSS Score',\n\n  // Neurological symptoms\n  vigilanzminderung: 'Vigilanzminderung / Reduced Consciousness',\n  vigilance_reduction: 'Vigilanzminderung / Reduced Consciousness',\n  reduced_consciousness: 'Vigilanzminderung / Reduced Consciousness',\n  armparese: 'Armparese / Arm Weakness',\n  arm_paresis: 'Armparese / Arm Weakness',\n  arm_weakness: 'Armparese / Arm Weakness',\n  beinparese: 'Beinparese / Leg Weakness',\n  leg_paresis: 'Beinparese / Leg Weakness',\n  leg_weakness: 'Beinparese / Leg Weakness',\n  eye_deviation: 'Blickdeviation / Eye Deviation',\n  blickdeviation: 'Blickdeviation / Eye Deviation',\n  headache: 'Kopfschmerzen / Headache',\n  kopfschmerzen: 'Kopfschmerzen / Headache',\n  nausea: 'Übelkeit / Nausea',\n  vomiting: 'Erbrechen / Vomiting',\n  aphasia: 'Aphasie / Aphasia',\n  dysarthria: 'Dysarthrie / Dysarthria',\n  ataxia: 'Ataxie / Ataxia',\n  facial_paresis: 'Gesichtsparese / Facial Weakness',\n\n  // Medical history\n  atrial_fibrillation: 'Vorhofflimmern / Atrial Fibrillation',\n  vorhofflimmern: 'Vorhofflimmern / Atrial Fibrillation',\n  anticoagulated_noak: 'Antikoagulation (NOAK) / Anticoagulation (NOAC)',\n  anticoagulation: 'Antikoagulation / Anticoagulation',\n  antiplatelets: 'Thrombozytenaggregationshemmer / Antiplatelets',\n  thrombozytenaggregationshemmer: 'Thrombozytenaggregationshemmer / Antiplatelets',\n  diabetes: 'Diabetes Mellitus',\n  hypertension: 'Arterielle Hypertonie / Hypertension',\n  prior_stroke: 'Schlaganfall (Anamnese) / Prior Stroke',\n  prior_tia: 'TIA (Anamnese) / Prior TIA',\n\n  // Timing\n  symptom_onset: 'Symptombeginn / Symptom Onset',\n  onset_time: 'Symptombeginn / Symptom Onset',\n  time_since_onset: 'Zeit seit Symptombeginn / Time Since Onset',\n};\n\n/**\n * Pattern-based replacements for common medical terms\n */\nconst PATTERN_REPLACEMENTS = [\n  { pattern: /_score$/i, replacement: ' Score' },\n  { pattern: /_value$/i, replacement: ' Wert' },\n  { pattern: /_bp$/i, replacement: ' Blutdruck' },\n  { pattern: /_years?$/i, replacement: '' },\n  { pattern: /^ich_/i, replacement: 'ICH ' },\n  { pattern: /^lvo_/i, replacement: 'LVO ' },\n  { pattern: /parese$/i, replacement: 'parese / Weakness' },\n  { pattern: /deviation$/i, replacement: 'deviation / Deviation' },\n];\n\n/**\n * Format driver/field names with consistent medical terminology\n * @param {string} fieldName - Technical field name\n * @returns {string} User-friendly medical label\n */\nexport function formatDriverName(fieldName) {\n  if (!fieldName) return '';\n\n  // First try exact match\n  const mapped = FIELD_LABEL_MAP[fieldName.toLowerCase()];\n  if (mapped) return mapped;\n\n  // Apply pattern-based replacements\n  let formatted = fieldName;\n  PATTERN_REPLACEMENTS.forEach(({ pattern, replacement }) => {\n    formatted = formatted.replace(pattern, replacement);\n  });\n\n  // Clean up and format\n  formatted = formatted\n    .replace(/_/g, ' ') // Replace underscores with spaces\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Title case\n    .trim();\n\n  return formatted;\n}\n\n/**\n * Format field labels for summary display\n * @param {string} fieldName - Technical field name\n * @returns {string} User-friendly summary label\n */\nexport function formatSummaryLabel(fieldName) {\n  const friendlyLabel = formatDriverName(fieldName);\n  // Remove units from labels as they're shown in values\n  return friendlyLabel.replace(/\\s*\\([^)]*\\)\\s*/g, '').trim();\n}\n\n/**\n * Format field values for display with appropriate units\n * @param {any} value - Field value\n * @param {string} fieldName - Field name for context\n * @returns {string} Formatted display value\n */\nexport function formatDisplayValue(value, fieldName = '') {\n  if (value === null || value === undefined || value === '') {\n    return '—';\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? '✓ Ja / Yes' : '✗ Nein / No';\n  }\n\n  if (typeof value === 'number') {\n    const lower = fieldName.toLowerCase();\n    // Add units based on field type\n    if (lower.includes('bp') || lower.includes('blood_pressure')) {\n      return `${value} mmHg`;\n    }\n    if (lower.includes('gfap')) {\n      return `${value} pg/mL`;\n    }\n    if (lower.includes('age')) {\n      return `${value} Jahre / years`;\n    }\n    if (lower.includes('score')) {\n      return value.toString();\n    }\n    if (lower.includes('time') || lower.includes('duration')) {\n      return `${value} min`;\n    }\n\n    // Default number formatting\n    return Number.isInteger(value) ? value.toString() : value.toFixed(1);\n  }\n\n  return value.toString();\n}\n","/**\n * Case Listener Service\n * Polls Cloud Function for active cases\n */\nimport { KIOSK_CONFIG } from '../config.js';\nimport {\n  createTimeoutSignal,\n  sleep,\n  validateCaseData,\n  isGPSStale,\n  CONSTANTS,\n} from '../utils.js';\n\nexport class CaseListener {\n  constructor() {\n    this.baseUrl = KIOSK_CONFIG.caseSharingUrl;\n    this.pollInterval = KIOSK_CONFIG.pollInterval;\n    // Don't cache hospitalId - always read from KIOSK_CONFIG for real-time updates\n    this.intervalId = null;\n    this.cases = new Map();\n    this.onUpdate = null;\n    this.onError = null;\n    this.lastFetchTime = null;\n    this.isConnected = false;\n    this.retryCount = 0;\n  }\n\n  /**\n   * Start listening for cases\n   * @param {Function} onUpdateCallback - Called when cases update\n   * @param {Function} onErrorCallback - Called on errors\n   */\n  start(onUpdateCallback, onErrorCallback) {\n    this.onUpdate = onUpdateCallback;\n    this.onError = onErrorCallback;\n\n    // Initial fetch\n    this.fetchCases();\n\n    // Start polling\n    this.intervalId = setInterval(() => {\n      this.fetchCases();\n    }, this.pollInterval);\n\n    console.log('[CaseListener] Started polling every', this.pollInterval, 'ms');\n  }\n\n  /**\n   * Stop listening\n   */\n  stop() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n      console.log('[CaseListener] Stopped polling');\n    }\n  }\n\n  /**\n   * Fetch cases from API with retry logic\n   */\n  async fetchCases() {\n    let lastError = null;\n\n    for (let attempt = 0; attempt <= CONSTANTS.MAX_RETRY_ATTEMPTS; attempt++) {\n      try {\n        const url = this.buildFetchUrl();\n\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n          },\n          signal: createTimeoutSignal(CONSTANTS.FETCH_TIMEOUT_MS),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to fetch cases');\n        }\n\n        // Success! Reset retry count and update connection status\n        this.retryCount = 0;\n        this.isConnected = true;\n        this.lastFetchTime = new Date();\n\n        // Process cases\n        this.processCases(data.cases || []);\n\n        // Notify listeners\n        if (this.onUpdate) {\n          this.onUpdate({\n            cases: Array.from(this.cases.values()),\n            timestamp: data.timestamp,\n            count: data.count,\n          });\n        }\n\n        return; // Success, exit function\n      } catch (error) {\n        lastError = error;\n        console.error(`[CaseListener] Fetch error (attempt ${attempt + 1}/${CONSTANTS.MAX_RETRY_ATTEMPTS + 1}):`, error);\n\n        // If not the last attempt, wait before retrying\n        if (attempt < CONSTANTS.MAX_RETRY_ATTEMPTS) {\n          const delayMs = CONSTANTS.RETRY_DELAYS_MS[attempt] || 8000;\n          console.log(`[CaseListener] Retrying in ${delayMs}ms...`);\n          await sleep(delayMs);\n        }\n      }\n    }\n\n    // All retries failed\n    console.error('[CaseListener] All retry attempts failed:', lastError);\n    this.isConnected = false;\n    this.retryCount++;\n\n    if (this.onError) {\n      this.onError(lastError);\n    }\n  }\n\n  /**\n   * Build fetch URL with filters\n   */\n  buildFetchUrl() {\n    let url = `${this.baseUrl}/get-cases`;\n\n    const params = new URLSearchParams();\n\n    // Always read from config for latest hospital selection\n    if (KIOSK_CONFIG.hospitalId) {\n      params.append('hospitalId', KIOSK_CONFIG.hospitalId);\n    }\n\n    params.append('status', 'in_transit');\n\n    const queryString = params.toString();\n    if (queryString) {\n      url += `?${queryString}`;\n    }\n\n    return url;\n  }\n\n  /**\n   * Process fetched cases with validation and enrichment\n   */\n  processCases(newCases) {\n    const oldCaseIds = new Set(this.cases.keys());\n    const newCaseIds = new Set();\n\n    // Process each case\n    newCases.forEach((caseData) => {\n      // Validate case data\n      if (!validateCaseData(caseData)) {\n        console.warn('[CaseListener] Invalid case data, skipping:', caseData);\n        return;\n      }\n\n      const caseId = caseData.id;\n      newCaseIds.add(caseId);\n\n      const isNew = !this.cases.has(caseId);\n\n      // Calculate GPS staleness\n      const gpsStale = isGPSStale(\n        caseData.tracking?.lastUpdated,\n        KIOSK_CONFIG.staleGpsMinutes\n      );\n\n      // Enrich tracking data\n      const enrichedTracking = {\n        ...(caseData.tracking || {}),\n        gpsStale,\n      };\n\n      // Store case with enriched data\n      this.cases.set(caseId, {\n        ...caseData,\n        tracking: enrichedTracking,\n        isNew, // Flag for new case alert\n        receivedAt: isNew ? new Date() : this.cases.get(caseId).receivedAt,\n      });\n\n      // Log new cases with timestamp info\n      if (isNew) {\n        console.log('[CaseListener] New case:', caseId, this.getCaseSummary(caseData));\n        console.log('[CaseListener] Timestamps:', {\n          createdAt: caseData.createdAt,\n          updatedAt: caseData.updatedAt,\n          receivedAt: caseData.receivedAt,\n          trackingLastUpdated: caseData.tracking?.lastUpdated,\n        });\n      }\n    });\n\n    // Remove cases that are no longer active\n    oldCaseIds.forEach((caseId) => {\n      if (!newCaseIds.has(caseId)) {\n        console.log('[CaseListener] Case removed:', caseId);\n        this.cases.delete(caseId);\n      }\n    });\n  }\n\n  /**\n   * Get case summary for logging\n   */\n  getCaseSummary(caseData) {\n    const ichPercent = Math.round((caseData.results?.ich?.probability || 0) * 100);\n    const eta = caseData.tracking?.duration || '?';\n\n    return {\n      module: caseData.moduleType,\n      ich: `${ichPercent}%`,\n      eta: `${eta} min`,\n      urgency: caseData.urgency,\n    };\n  }\n\n  /**\n   * Get all cases\n   */\n  getCases() {\n    return Array.from(this.cases.values());\n  }\n\n  /**\n   * Get case by ID\n   */\n  getCase(caseId) {\n    return this.cases.get(caseId);\n  }\n\n  /**\n   * Mark case as viewed (clear isNew flag)\n   */\n  markViewed(caseId) {\n    const caseData = this.cases.get(caseId);\n    if (caseData) {\n      caseData.isNew = false;\n      this.cases.set(caseId, caseData);\n    }\n  }\n\n  /**\n   * Dismiss/archive a case\n   * @param {string} caseId - Case ID to dismiss\n   * @returns {Promise} - Resolution of API call\n   */\n  async dismissCase(caseId) {\n    try {\n      const url = `${this.baseUrl}/archive-case`;\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          caseId,\n          reason: 'dismissed_by_kiosk',\n        }),\n        signal: AbortSignal.timeout(8000),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n\n      if (!data.success) {\n        throw new Error(data.error || 'Failed to dismiss case');\n      }\n\n      // Remove from local cache\n      this.cases.delete(caseId);\n      console.log('[CaseListener] Case dismissed:', caseId);\n\n      // Trigger update to refresh UI\n      if (this.onUpdate) {\n        this.onUpdate({\n          cases: Array.from(this.cases.values()),\n          timestamp: new Date().toISOString(),\n          count: this.cases.size,\n        });\n      }\n\n      return data;\n    } catch (error) {\n      console.error('[CaseListener] Dismiss error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get connection status\n   */\n  getStatus() {\n    return {\n      isConnected: this.isConnected,\n      lastFetchTime: this.lastFetchTime,\n      caseCount: this.cases.size,\n      isPolling: this.intervalId !== null,\n    };\n  }\n}\n\n// Export singleton\nexport const caseListener = new CaseListener();\n","/**\n * Dashboard UI - Case List View\n */\nimport { URGENCY_CONFIG, KIOSK_CONFIG } from '../config.js';\nimport { getRiskColor, getTimeAgo, formatETA, isCaseStale, getRelevantTimestamp } from '../utils.js';\n\nexport function renderDashboard(cases) {\n  const container = document.getElementById('casesContainer');\n  if (!container) {\n    return;\n  }\n\n  if (!cases || cases.length === 0) {\n    container.innerHTML = `\n      <div class=\"no-cases-state\">\n        <div class=\"no-cases-icon\">✓</div>\n        <h2>Keine aktiven Fälle / No Active Cases</h2>\n        <p>Das System ist aktiv und überwacht eingehende Fälle</p>\n        <p>System is active and monitoring incoming cases</p>\n      </div>\n    `;\n    return;\n  }\n\n  // Sort by urgency and ETA\n  const sortedCases = sortCases(cases);\n\n  // Apply display limit\n  const displayCases = sortedCases.slice(0, KIOSK_CONFIG.maxCasesDisplay);\n\n  // Render case cards\n  const cardsHTML = displayCases.map((caseData) => renderCaseCard(caseData)).join('');\n\n  // Show warning if cases were truncated\n  const truncatedWarning = sortedCases.length > KIOSK_CONFIG.maxCasesDisplay\n    ? `<div class=\"truncated-warning\" role=\"alert\">\n         Showing ${KIOSK_CONFIG.maxCasesDisplay} of ${sortedCases.length} cases\n       </div>`\n    : '';\n\n  container.innerHTML = `\n    ${truncatedWarning}\n    <div class=\"cases-grid\" role=\"list\" aria-label=\"Active cases\">\n      ${cardsHTML}\n    </div>\n  `;\n}\n\n/**\n * Sort cases by urgency and ETA\n */\nfunction sortCases(cases) {\n  return [...cases].sort((a, b) => {\n    const urgencyA = URGENCY_CONFIG[a.urgency]?.priority ?? 10;\n    const urgencyB = URGENCY_CONFIG[b.urgency]?.priority ?? 10;\n\n    if (urgencyA !== urgencyB) {\n      return urgencyA - urgencyB;\n    }\n\n    // Same urgency - sort by ETA\n    const etaA = a.tracking?.duration || 9999;\n    const etaB = b.tracking?.duration || 9999;\n    return etaA - etaB;\n  });\n}\n\n/**\n * Generate unique patient code from case ID\n */\nfunction generatePatientCode(caseId) {\n  if (!caseId) return 'PAT-0000';\n\n  // Create a simple hash from the case ID\n  let hash = 0;\n  for (let i = 0; i < caseId.length; i++) {\n    hash = ((hash << 5) - hash) + caseId.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  // Convert to positive 4-digit number\n  const code = Math.abs(hash % 10000).toString().padStart(4, '0');\n  return `PAT-${code}`;\n}\n\n/**\n * Render individual case card\n */\nfunction renderCaseCard(caseData) {\n  const urgencyConfig = URGENCY_CONFIG[caseData.urgency] || URGENCY_CONFIG.STANDARD;\n  const ichPercent = Math.round((caseData.results?.ich?.probability || 0) * 100);\n  const lvoPercent = caseData.results?.lvo ? Math.round(caseData.results.lvo.probability * 100) : null;\n  const formattedETA = formatETA(caseData.tracking?.duration);\n  const distance = caseData.tracking?.distance || '?';\n\n  // Generate unique patient code\n  const patientCode = generatePatientCode(caseData.id);\n\n  // Check GPS staleness\n  const isGpsStale = caseData.tracking?.gpsStale || false;\n\n  // Get most relevant timestamp (updatedAt > receivedAt > lastUpdated > createdAt)\n  const relevantTimestamp = getRelevantTimestamp(caseData);\n\n  // Check if case is old/stale\n  const caseIsStale = isCaseStale(relevantTimestamp);\n\n  // Calculate time since received/updated\n  const receivedAgo = getTimeAgo(relevantTimestamp);\n\n  // Create accessible label\n  const ariaLabel = `${caseData.urgency} case, ${patientCode}, ICH risk ${ichPercent}%, ETA ${formattedETA} minutes`;\n\n  return `\n    <div class=\"case-card ${caseData.urgency.toLowerCase()} ${caseData.isNew ? 'new-case' : ''} ${caseIsStale ? 'stale-case' : ''}\"\n         data-case-id=\"${caseData.id}\"\n         style=\"border-color: ${urgencyConfig.color}\"\n         role=\"listitem\"\n         tabindex=\"0\"\n         aria-label=\"${ariaLabel}\">\n\n      <div class=\"case-header\">\n        <div class=\"urgency-badge\" style=\"background: ${urgencyConfig.color}\">\n          ${urgencyConfig.icon} ${caseData.urgency}\n        </div>\n        <div class=\"case-meta\">\n          <span class=\"patient-code\">${patientCode}</span>\n          <span class=\"module-type\">${caseData.moduleType}</span>\n        </div>\n      </div>\n\n      <div class=\"case-risks\">\n        <div class=\"risk-circle-container\">\n          ${renderRiskRingSVG(ichPercent, 'ICH')}\n        </div>\n\n        ${lvoPercent !== null ? `\n          <div class=\"risk-circle-container\">\n            ${renderRiskRingSVG(lvoPercent, 'LVO')}\n          </div>\n        ` : ''}\n      </div>\n\n      <div class=\"case-eta\">\n        <div class=\"eta-main ${isGpsStale ? 'stale' : ''}\">\n          <span class=\"eta-value\">${formattedETA}</span>\n          <span class=\"eta-unit\">${formattedETA === 'Arrived' || formattedETA === '?' ? '' : 'min'}</span>\n        </div>\n        <div class=\"eta-details\">\n          <span class=\"distance\">${typeof distance === 'number' ? distance.toFixed(1) : distance} km</span>\n          ${isGpsStale ? '<span class=\"gps-stale-warning\" role=\"alert\">⚠️ GPS stale</span>' : ''}\n        </div>\n      </div>\n\n      <div class=\"case-footer\">\n        <span class=\"case-time\">${receivedAgo}</span>\n        <span class=\"view-details\">View Details →</span>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render SVG risk ring for dashboard cards\n */\nfunction renderRiskRingSVG(percent, label) {\n  const color = getRiskColor(percent);\n  const circumference = Math.PI * 100; // 2πr where r=50\n  const offset = circumference * (1 - percent / 100);\n  const riskClass = percent > 70 ? 'critical' : percent > 50 ? 'high' : percent > 30 ? 'medium' : 'low';\n\n  return `\n    <svg class=\"risk-ring-svg ${riskClass}\" viewBox=\"0 0 120 120\" width=\"80\" height=\"80\">\n      <!-- Background circle -->\n      <circle\n        cx=\"60\"\n        cy=\"60\"\n        r=\"50\"\n        fill=\"none\"\n        stroke=\"rgba(255,255,255,0.2)\"\n        stroke-width=\"8\"/>\n\n      <!-- Progress circle -->\n      <circle\n        cx=\"60\"\n        cy=\"60\"\n        r=\"50\"\n        fill=\"none\"\n        stroke=\"${color}\"\n        stroke-width=\"8\"\n        stroke-dasharray=\"${circumference}\"\n        stroke-dashoffset=\"${offset}\"\n        stroke-linecap=\"round\"\n        transform=\"rotate(-90 60 60)\"/>\n\n      <!-- Percentage text -->\n      <text\n        x=\"60\"\n        y=\"65\"\n        text-anchor=\"middle\"\n        font-family=\"system-ui, -apple-system, sans-serif\"\n        font-size=\"20\"\n        font-weight=\"bold\"\n        fill=\"#ffffff\"\n        style=\"pointer-events: none;\">\n        ${percent}%\n      </text>\n    </svg>\n    <div class=\"risk-label\">${label}</div>\n  `;\n}\n","/**\n * Kiosk Main Application\n * Entry point for Notaufnahme kiosk display\n */\nimport './styles.css';\nimport { KIOSK_CONFIG } from './config.js';\nimport { caseListener } from './services/case-listener.js';\nimport { renderDashboard } from './ui/dashboard.js';\nimport { showCaseDetail } from './ui/case-detail.js';\nimport { CONSTANTS } from './utils.js';\n\n// Application state\nlet currentCases = [];\nlet audioContext = null;\nlet clockIntervalId = null;\nlet isFirstLoad = true;\n\n/**\n * Initialize kiosk application\n */\nasync function initializeKiosk() {\n  console.log('[Kiosk] Initializing...', KIOSK_CONFIG);\n\n  // Initialize hospital selector\n  initializeHospitalSelector();\n\n  // Initialize theme\n  initializeTheme();\n\n  // Start clock\n  updateClock();\n  clockIntervalId = setInterval(updateClock, 1000);\n\n  // Initialize audio if enabled\n  if (KIOSK_CONFIG.playAudioAlert) {\n    initializeAudio();\n  }\n\n  // Start case listener\n  caseListener.start(\n    (data) => handleCaseUpdate(data),\n    (error) => handleError(error),\n  );\n\n  // Add event listeners\n  attachEventListeners();\n\n  // Add cleanup on page unload\n  window.addEventListener('beforeunload', cleanup);\n\n  console.log('[Kiosk] Initialized successfully');\n}\n\n/**\n * Cleanup resources before page unload\n */\nfunction cleanup() {\n  console.log('[Kiosk] Cleaning up resources...');\n\n  // Stop polling\n  caseListener.stop();\n\n  // Clear clock interval\n  if (clockIntervalId) {\n    clearInterval(clockIntervalId);\n    clockIntervalId = null;\n  }\n\n  // Close audio context\n  if (audioContext && audioContext.state !== 'closed') {\n    audioContext.close().catch((err) => {\n      console.warn('[Kiosk] Error closing audio context:', err);\n    });\n  }\n}\n\n/**\n * Handle case updates\n */\nfunction handleCaseUpdate(data) {\n  const previousCount = currentCases.length;\n  currentCases = data.cases || [];\n\n  console.log('[Kiosk] Cases updated:', {\n    count: currentCases.length,\n    previous: previousCount,\n  });\n\n  // Update UI\n  renderDashboard(currentCases);\n  updateHeader(data);\n\n  // Check for new cases (skip alert on first load)\n  const newCases = currentCases.filter((c) => c.isNew);\n  if (newCases.length > 0 && !isFirstLoad) {\n    // Show alert for new cases\n    playNewCaseAlert();\n    flashScreen();\n\n    // Mark as viewed after showing alert\n    setTimeout(() => {\n      newCases.forEach((c) => caseListener.markViewed(c.id));\n    }, CONSTANTS.NEW_CASE_VIEWED_DELAY_MS);\n  }\n\n  // Mark first load complete\n  if (isFirstLoad) {\n    isFirstLoad = false;\n  }\n\n  // Update connection status\n  updateConnectionStatus(true);\n}\n\n/**\n * Handle errors\n */\nfunction handleError(error) {\n  console.error('[Kiosk] Error:', error);\n  updateConnectionStatus(false);\n\n  // Show error in UI if no cases\n  if (currentCases.length === 0) {\n    const container = document.getElementById('casesContainer');\n    if (container) {\n      container.innerHTML = `\n        <div class=\"error-state\">\n          <div class=\"error-icon\">⚠️</div>\n          <h2>Verbindungsfehler / Connection Error</h2>\n          <p>${error.message || 'Unable to connect to case monitoring system'}</p>\n          <p class=\"error-hint\">Checking again in ${KIOSK_CONFIG.pollInterval / 1000} seconds...</p>\n        </div>\n      `;\n    }\n  }\n}\n\n/**\n * Initialize hospital selector\n */\nfunction initializeHospitalSelector() {\n  // Import available hospitals and setHospital function\n  const selector = document.getElementById('hospitalSelector');\n  if (!selector) return;\n\n  // Dynamically import hospitals list\n  import('./config.js').then(({ AVAILABLE_HOSPITALS, setHospital }) => {\n    // Populate selector\n    selector.innerHTML = AVAILABLE_HOSPITALS.map(h => {\n      // Check if this option should be selected\n      const isSelected = (h.id === 'ALL' && KIOSK_CONFIG.hospitalId === null) ||\n                         (h.id === KIOSK_CONFIG.hospitalId);\n      return `<option value=\"${h.id}\" ${isSelected ? 'selected' : ''}>${h.name}</option>`;\n    }).join('');\n\n    // Handle selection changes\n    selector.addEventListener('change', (e) => {\n      const hospitalId = e.target.value;\n      if (confirm(`Switch to ${e.target.options[e.target.selectedIndex].text}?\\n\\nThis will reload the page.`)) {\n        setHospital(hospitalId);\n      } else {\n        // Restore previous selection\n        selector.value = KIOSK_CONFIG.hospitalId === null ? 'ALL' : KIOSK_CONFIG.hospitalId;\n      }\n    });\n  });\n}\n\n/**\n * Initialize theme\n */\nfunction initializeTheme() {\n  // Get saved theme or use default from config\n  const savedTheme = localStorage.getItem('kiosk_theme') || KIOSK_CONFIG.theme;\n  applyTheme(savedTheme);\n\n  // Add theme toggle button listener\n  const themeToggle = document.getElementById('themeToggle');\n  if (themeToggle) {\n    themeToggle.addEventListener('click', toggleTheme);\n  }\n\n  console.log('[Kiosk] Theme initialized:', savedTheme);\n}\n\n/**\n * Toggle between light and dark theme\n */\nfunction toggleTheme() {\n  const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark';\n  const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n\n  applyTheme(newTheme);\n  localStorage.setItem('kiosk_theme', newTheme);\n\n  console.log('[Kiosk] Theme switched to:', newTheme);\n}\n\n/**\n * Apply theme to document\n */\nfunction applyTheme(theme) {\n  document.documentElement.setAttribute('data-theme', theme);\n\n  // Update theme toggle icon\n  const themeIcon = document.querySelector('.theme-icon');\n  if (themeIcon) {\n    themeIcon.textContent = theme === 'dark' ? '☀️' : '🌙';\n  }\n}\n\n/**\n * Update header information\n */\nfunction updateHeader(data) {\n  // Update case count\n  const countBadge = document.getElementById('caseCount');\n  if (countBadge) {\n    const count = data.count || 0;\n    countBadge.textContent = `${count} ${count === 1 ? 'Case' : 'Cases'}`;\n    countBadge.className = `case-count-badge ${count > 0 ? 'has-cases' : ''}`;\n  }\n}\n\n/**\n * Update connection status indicator\n */\nfunction updateConnectionStatus(connected) {\n  const status = document.getElementById('connectionStatus');\n  if (status) {\n    status.className = `status-indicator ${connected ? 'connected' : 'disconnected'}`;\n    status.title = connected ? 'Connected' : 'Disconnected';\n    status.setAttribute('aria-label', `Connection status: ${connected ? 'connected' : 'disconnected'}`);\n  }\n}\n\n/**\n * Update clock\n */\nfunction updateClock() {\n  const clockElement = document.getElementById('currentTime');\n  if (clockElement) {\n    const now = new Date();\n    clockElement.textContent = now.toLocaleTimeString('de-DE', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    });\n  }\n}\n\n/**\n * Initialize audio context\n */\nfunction initializeAudio() {\n  // Create audio context on first user interaction\n  document.addEventListener(\n    'click',\n    () => {\n      if (!audioContext) {\n        audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        console.log('[Kiosk] Audio initialized');\n      }\n    },\n    { once: true },\n  );\n}\n\n/**\n * Play new case alert with audio context resume\n */\nasync function playNewCaseAlert() {\n  if (!KIOSK_CONFIG.playAudioAlert || !audioContext) {\n    return;\n  }\n\n  try {\n    // Resume audio context if suspended (browser throttling)\n    if (audioContext.state === 'suspended') {\n      await audioContext.resume();\n      console.log('[Kiosk] Audio context resumed');\n    }\n\n    // Generate alert beep\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n\n    oscillator.frequency.value = CONSTANTS.ALERT_BEEP_FREQUENCY_HZ;\n    oscillator.type = 'sine';\n\n    gainNode.gain.setValueAtTime(CONSTANTS.ALERT_BEEP_VOLUME, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(\n      0.01,\n      audioContext.currentTime + CONSTANTS.ALERT_BEEP_DURATION_SEC\n    );\n\n    oscillator.start(audioContext.currentTime);\n    oscillator.stop(audioContext.currentTime + CONSTANTS.ALERT_BEEP_DURATION_SEC);\n\n    console.log('[Kiosk] Alert sound played');\n  } catch (error) {\n    console.warn('[Kiosk] Audio playback failed:', error);\n  }\n}\n\n/**\n * Flash screen for new case\n */\nfunction flashScreen() {\n  document.body.classList.add('flash-alert');\n\n  setTimeout(() => {\n    document.body.classList.remove('flash-alert');\n  }, 1000);\n}\n\n/**\n * Attach event listeners\n */\nfunction attachEventListeners() {\n  // Click on case card to navigate to PWA results page\n  document.addEventListener('click', (e) => {\n    const caseCard = e.target.closest('.case-card');\n    if (caseCard) {\n      const caseId = caseCard.dataset.caseId;\n      if (caseId) {\n        // Navigate to PWA results page in kiosk mode\n        const pwaUrl = `https://igfap.eu/0825/#results?display=kiosk&caseId=${caseId}`;\n        window.location.href = pwaUrl;\n        caseListener.markViewed(caseId);\n      }\n    }\n\n    // Dismiss case button\n    const dismissButton = e.target.closest('.dismiss-case-button');\n    if (dismissButton) {\n      const caseId = dismissButton.dataset.caseId;\n      if (caseId) {\n        handleDismissCase(caseId);\n      }\n    }\n\n    // Close modal\n    if (e.target.classList.contains('modal-overlay') || e.target.classList.contains('close-modal')) {\n      closeModal();\n    }\n  });\n\n  // Keyboard navigation\n  document.addEventListener('keydown', (e) => {\n    // ESC key to close modal\n    if (e.key === 'Escape') {\n      closeModal();\n      return;\n    }\n\n    // Enter or Space on case card to navigate to PWA results\n    if (e.key === 'Enter' || e.key === ' ') {\n      const caseCard = e.target.closest('.case-card');\n      if (caseCard) {\n        e.preventDefault(); // Prevent scroll on Space\n        const caseId = caseCard.dataset.caseId;\n        if (caseId) {\n          // Navigate to PWA results page in kiosk mode\n          const pwaUrl = `https://igfap.eu/0825/#results?display=kiosk&caseId=${caseId}`;\n          window.location.href = pwaUrl;\n          caseListener.markViewed(caseId);\n        }\n      }\n    }\n  });\n\n  // Visibility change - resume polling if tab becomes visible\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      console.log('[Kiosk] Tab visible - fetching latest cases');\n      caseListener.fetchCases();\n    }\n  });\n\n  // Listen for custom dismissCase event from case detail modal\n  window.addEventListener('dismissCase', (e) => {\n    const caseId = e.detail?.caseId;\n    if (caseId) {\n      console.log('[Kiosk] Received dismissCase event for:', caseId);\n      handleDismissCase(caseId);\n    } else {\n      console.error('[Kiosk] dismissCase event missing caseId');\n    }\n  });\n}\n\n/**\n * Handle case dismissal with confirmation\n */\nasync function handleDismissCase(caseId) {\n  const caseData = caseListener.getCase(caseId);\n  if (!caseData) {\n    console.warn('[Kiosk] Case not found:', caseId);\n    return;\n  }\n\n  // Show confirmation dialog\n  const confirmMessage = `Are you sure you want to dismiss this case?\\n\\n` +\n                        `Ambulance: ${caseData.ambulanceId}\\n` +\n                        `Module: ${caseData.moduleType}\\n` +\n                        `ICH Risk: ${Math.round((caseData.results?.ich?.probability || 0) * 100)}%\\n\\n` +\n                        `This action will archive the case.`;\n\n  const confirmed = confirm(confirmMessage);\n\n  if (!confirmed) {\n    console.log('[Kiosk] Case dismissal cancelled');\n    return;\n  }\n\n  try {\n    // Disable button to prevent double-click\n    const dismissButton = document.querySelector(`[data-case-id=\"${caseId}\"]`);\n    if (dismissButton) {\n      dismissButton.disabled = true;\n      dismissButton.textContent = 'Dismissing...';\n    }\n\n    // Call API to dismiss case\n    await caseListener.dismissCase(caseId);\n\n    console.log('[Kiosk] Case dismissed successfully:', caseId);\n\n    // Close modal\n    closeModal();\n\n    // Show success feedback (optional flash)\n    document.body.classList.add('flash-success');\n    setTimeout(() => {\n      document.body.classList.remove('flash-success');\n    }, 500);\n\n  } catch (error) {\n    console.error('[Kiosk] Failed to dismiss case:', error);\n\n    // Show error alert\n    alert(`Failed to dismiss case:\\n${error.message}\\n\\nPlease try again or contact support.`);\n\n    // Re-enable button\n    const dismissButton = document.querySelector(`[data-case-id=\"${caseId}\"]`);\n    if (dismissButton) {\n      dismissButton.disabled = false;\n      dismissButton.textContent = '🗑️ Dismiss Case';\n    }\n  }\n}\n\n/**\n * Close case detail modal\n */\nfunction closeModal() {\n  const modal = document.getElementById('caseDetailModal');\n  if (modal) {\n    modal.style.display = 'none';\n    modal.querySelector('.modal-content').innerHTML = '';\n  }\n}\n\n/**\n * Handle application errors\n */\nwindow.addEventListener('error', (event) => {\n  console.error('[Kiosk] Unhandled error:', event.error);\n});\n\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('[Kiosk] Unhandled rejection:', event.reason);\n});\n\n/**\n * Start application when DOM ready\n */\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeKiosk);\n} else {\n  initializeKiosk();\n}\n\n/**\n * Export for debugging\n */\nwindow.kioskApp = {\n  getCases: () => currentCases,\n  getStatus: () => caseListener.getStatus(),\n  refresh: () => caseListener.fetchCases(),\n  playAlert: () => playNewCaseAlert(),\n};\n"],"file":"assets/index-EiCSF-50.js"}